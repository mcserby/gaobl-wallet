{"version":3,"file":"src_app_sites_login_login_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;AAOO,MAAM,cAAc;IAEzB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EALU,cAAc;4GAAd,cAAc;QCP3B,yEAAyB;QACvB,qEAAI;QAAA,uDAA6B;;QAAA,4DAAK;QACtC,gFAA4C;QAC9C,4DAAM;;QAFA,0DAA6B;QAA7B,+IAA6B;;;;;;;;;;;;;;;;;;;;;ACAc;AACJ;AACD;AACQ;;;AAgB7C,MAAM,WAAW;;sEAAX,WAAW;wGAAX,WAAW;6GAHX,EAAE,YAPF;YACL,kEAAqB,CAAC,CAAC;oBACnB,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,4DAAc;iBACtC,CAAC,CAAC;YACH,mDAAQ;YACR,gEAAe;SAClB;mIAIQ,WAAW,mBAZpB,4DAAc,wEAMV,mDAAQ;QACR,gEAAe;;;;;;;;;;;;;;;;;;;ACXkD;;;;;AAOlE,MAAM,mBAAmB;IAE9B,YACmB,MAAc,EACd,iBAAoC;QADpC,WAAM,GAAN,MAAM,CAAQ;QACd,sBAAiB,GAAjB,iBAAiB,CAAmB;IACnD,CAAC;IAEL,QAAQ;IACR,CAAC;IAED,kBAAkB,CAAC,MAAa;QAC9B,MAAM,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAqB,CAAC;QAC9E,IAAI,UAAU,EAAE;YACd,MAAM,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC;YAClC,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC7B,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBACtB,MAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;gBACpC,UAAU,CAAC,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;gBACrC,UAAU,CAAC,MAAM,GAAG,CAAC,KAAgC,EAAE,EAAE;;oBACvD,MAAM,UAAU,GAAG,WAAK,CAAC,MAAM,0CAAE,MAAM,CAAC;oBACxC,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;wBAClC,8FAA4B,GAAG,UAAU,CAAC;wBAC1C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;qBAC7C;gBACH,CAAC,CAAC;gBACF,UAAU,CAAC,OAAO,GAAG,CAAC,KAAgC,EAAE,EAAE;oBACxD,OAAO,CAAC,KAAK,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;gBAC9C,CAAC,CAAC;aACH;SACF;IACH,CAAC;;sFA9BU,mBAAmB;iHAAnB,mBAAmB;QCXhC,yEAAsB;QACpB,8EAAgG;QAAnD,kJAAU,8BAA0B,IAAC;QAAlF,4DAAgG;QAChG,oEAA8D;QAC9D,qEAAI;QAAA,uDAA0C;;QAAA,4DAAK;QACnD,qEAAI;QAAA,uDAA0C;;QAAA,4DAAK;QACnD,4EAAyB;QAAA,wDAA0C;;QAAA,4DAAQ;QAC7E,4DAAM;;QAHA,0DAA0C;QAA1C,4JAA0C;QAC1C,0DAA0C;QAA1C,4JAA0C;QACrB,0DAA0C;QAA1C,6JAA0C;;;;;;;;;;;;;;;;;;;;ACJG;AACpB;AACC;;AAc9C,MAAM,QAAQ;;gEAAR,QAAQ;qGAAR,QAAQ;yGARV;YACP,gEAAe;YACf,iEAAa;SACd;mIAKU,QAAQ,mBAVjB,mFAAmB,aAGnB,gEAAe;QACf,iEAAa,aAGb,mFAAmB","sources":["./src/app/sites/login/login.component.ts","./src/app/sites/login/login.component.html","./src/app/sites/login/login.module.ts","./src/app/ui/file-upload/file-upload.component.ts","./src/app/ui/file-upload/file-upload.component.html","./src/app/ui/ui.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"center-full\">\n  <h1>{{'login.title' | translate}}</h1>\n  <app-file-upload class=\"\"></app-file-upload>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport {LoginComponent} from './login.component';\r\nimport {RouterModule} from '@angular/router';\r\nimport {UiModule} from '../../ui/ui.module';\r\nimport {TranslateModule} from \"@ngx-translate/core\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent\r\n  ],\r\n    imports: [\r\n        RouterModule.forChild([{\r\n            path: '', component: LoginComponent\r\n        }]),\r\n        UiModule,\r\n        TranslateModule\r\n    ],\r\n  providers: [],\r\n  bootstrap: []\r\n})\r\nexport class LoginModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport {Store} from '@ngrx/store';\nimport {login} from '../../store/actions/auth.action';\nimport {Router} from '@angular/router';\nimport { SharedDataService } from 'src/app/services/shared-data.service';\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.scss']\n})\nexport class FileUploadComponent implements OnInit {\n\n  constructor(\n    private readonly router: Router,\n    private readonly sharedDataService: SharedDataService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  fileBrowserHandler($event: Event) {\n    const filesInput = document.getElementById('fileDropRef') as HTMLInputElement;\n    if (filesInput) {\n      const files = filesInput['files'];\n      if (files && files.length > 0) {\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.readAsText(file, 'UTF-8');\n        fileReader.onload = (event: ProgressEvent<FileReader>) => {\n          const privateKey = event.target?.result;\n          if (typeof privateKey === 'string') {\n            SharedDataService.privateKey = privateKey;\n            this.router.navigate(['/dashboard']).then();\n          }\n        };\n        fileReader.onerror = (event: ProgressEvent<FileReader>) => {\n          console.error('Error reading file:', event);\n        };\n      }\n    }\n  }\n}\n","<div class=\"dropzone\">\n  <input type=\"file\" id=\"fileDropRef\" multiple (change)=\"fileBrowserHandler($event)\" #fileDropRef>\n  <img src=\"/assets/img/file-upload.svg\" alt=\"file upload icon\">\n  <h3>{{'file.dragAndDrop.title.1' | translate}}</h3>\n  <h3>{{'file.dragAndDrop.title.2' | translate}}</h3>\n  <label for=\"fileDropRef\">{{'file.dragAndDrop.title.3' | translate}}</label>\n</div>\n","import {NgModule} from '@angular/core';\r\nimport {FileUploadComponent} from './file-upload/file-upload.component';\r\nimport {TranslateModule} from \"@ngx-translate/core\";\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FileUploadComponent\r\n  ],\r\n  imports: [\r\n    TranslateModule,\r\n    MatIconModule\r\n  ],\r\n  exports:[\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class UiModule { }\r\n"],"names":[],"sourceRoot":"webpack:///"}