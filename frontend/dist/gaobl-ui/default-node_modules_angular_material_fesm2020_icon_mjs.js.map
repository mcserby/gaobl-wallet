{"version":3,"file":"default-node_modules_angular_material_fesm2020_icon_mjs.js","mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AC5LwC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kDAAO;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEmB;;;;;;;;;;;;;;;;;;;;;;AC5BwB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,MAAM;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,MAAM;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,qDAAU;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,oBAAoB;AACpB,8BAA8B;AAC9B,yBAAyB;AACzB,SAAS,MAAM,SAAS;AACxB,QAAQ,MAAM,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,MAAM;AACrE;AACA,qCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE2I;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClI3I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,yBAAyB;AACzB,uBAAuB;AACvB;AACA;AACA;AACA;AACA,uBAAuB;AACvB,oBAAoB;AACpB;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEq/B;;;;;;;;;;;;;;;;;;;;;;;ACrKr/B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA,MAAMY,uBAAN,CAA8B;AAC1BlO,EAAAA,MAAM,CAACmO,QAAD,EAAW;AACb,WAAO,OAAOC,gBAAP,KAA4B,WAA5B,GAA0C,IAA1C,GAAiD,IAAIA,gBAAJ,CAAqBD,QAArB,CAAxD;AACH;;AAHyB;;AAK9BD,uBAAuB,CAAC9Z,IAAxB;AAAA,mBAAoH8Z,uBAApH;AAAA;;AACAA,uBAAuB,CAAC5Z,KAAxB,kBAD0GvI,gEAC1G;AAAA,SAAwHmiB,uBAAxH;AAAA,WAAwHA,uBAAx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","sources":["./node_modules/@angular/cdk/fesm2020/a11y.mjs","./node_modules/@angular/cdk/fesm2020/bidi.mjs","./node_modules/@angular/cdk/fesm2020/cdk.mjs","./node_modules/@angular/cdk/fesm2020/coercion.mjs","./node_modules/@angular/cdk/fesm2020/keycodes.mjs","./node_modules/@angular/cdk/fesm2020/observers.mjs","./node_modules/@angular/cdk/fesm2020/platform.mjs","./node_modules/@angular/material/fesm2020/core.mjs","./node_modules/@angular/material/fesm2020/icon.mjs"],"sourcesContent":["import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, QueryList, Directive, Input, InjectionToken, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getFocusedElementPierceShadowDom, normalizePassiveListenerOptions, _getEventTarget, _getShadowRoot } from '@angular/cdk/platform';\nimport { Subject, Subscription, BehaviorSubject, of } from 'rxjs';\nimport { hasModifierKey, A, Z, ZERO, NINE, END, HOME, LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, TAB, ALT, CONTROL, MAC_META, META, SHIFT } from '@angular/cdk/keycodes';\nimport { tap, debounceTime, filter, map, take, skip, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** IDs are delimited by an empty space, as per the spec. */\nconst ID_DELIMITER = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction addAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    if (ids.some(existingId => existingId.trim() == id.trim())) {\n        return;\n    }\n    ids.push(id.trim());\n    el.setAttribute(attr, ids.join(ID_DELIMITER));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    const filteredIds = ids.filter(val => val != id.trim());\n    if (filteredIds.length) {\n        el.setAttribute(attr, filteredIds.join(ID_DELIMITER));\n    }\n    else {\n        el.removeAttribute(attr);\n    }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace delimited) in the attribute value\n    return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * ID used for the body container where all messages are appended.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 14.0.0\n */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/** Global incremental identifier for each registered message element. */\nlet nextId = 0;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n    constructor(_document, \n    /**\n     * @deprecated To be turned into a required parameter.\n     * @breaking-change 14.0.0\n     */\n    _platform) {\n        this._platform = _platform;\n        /** Map of all registered message elements that have been placed into the document. */\n        this._messageRegistry = new Map();\n        /** Container for all registered messages. */\n        this._messagesContainer = null;\n        /** Unique ID for the service. */\n        this._id = `${nextId++}`;\n        this._document = _document;\n    }\n    describe(hostElement, message, role) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (typeof message !== 'string') {\n            // We need to ensure that the element has an ID.\n            setMessageId(message);\n            this._messageRegistry.set(key, { messageElement: message, referenceCount: 0 });\n        }\n        else if (!this._messageRegistry.has(key)) {\n            this._createMessageElement(message, role);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, key)) {\n            this._addMessageReference(hostElement, key);\n        }\n    }\n    removeDescription(hostElement, message, role) {\n        if (!message || !this._isElementNode(hostElement)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (this._isElementDescribedByMessage(hostElement, key)) {\n            this._removeMessageReference(hostElement, key);\n        }\n        // If the message is a string, it means that it's one that we created for the\n        // consumer so we can remove it safely, otherwise we should leave it in place.\n        if (typeof message === 'string') {\n            const registeredMessage = this._messageRegistry.get(key);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(key);\n            }\n        }\n        if (this._messagesContainer?.childNodes.length === 0) {\n            this._messagesContainer.remove();\n            this._messagesContainer = null;\n        }\n    }\n    /** Unregisters all created message elements and removes the message container. */\n    ngOnDestroy() {\n        const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}=\"${this._id}\"]`);\n        for (let i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        this._messagesContainer?.remove();\n        this._messagesContainer = null;\n        this._messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     */\n    _createMessageElement(message, role) {\n        const messageElement = this._document.createElement('div');\n        setMessageId(messageElement);\n        messageElement.textContent = message;\n        if (role) {\n            messageElement.setAttribute('role', role);\n        }\n        this._createMessagesContainer();\n        this._messagesContainer.appendChild(messageElement);\n        this._messageRegistry.set(getKey(message, role), { messageElement, referenceCount: 0 });\n    }\n    /** Deletes the message element from the global messages container. */\n    _deleteMessageElement(key) {\n        this._messageRegistry.get(key)?.messageElement?.remove();\n        this._messageRegistry.delete(key);\n    }\n    /** Creates the global container for all aria-describedby messages. */\n    _createMessagesContainer() {\n        if (this._messagesContainer) {\n            return;\n        }\n        const containerClassName = 'cdk-describedby-message-container';\n        const serverContainers = this._document.querySelectorAll(`.${containerClassName}[platform=\"server\"]`);\n        for (let i = 0; i < serverContainers.length; i++) {\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            serverContainers[i].remove();\n        }\n        const messagesContainer = this._document.createElement('div');\n        // We add `visibility: hidden` in order to prevent text in this container from\n        // being searchable by the browser's Ctrl + F functionality.\n        // Screen-readers will still read the description for elements with aria-describedby even\n        // when the description element is not visible.\n        messagesContainer.style.visibility = 'hidden';\n        // Even though we use `visibility: hidden`, we still apply `cdk-visually-hidden` so that\n        // the description element doesn't impact page layout.\n        messagesContainer.classList.add(containerClassName);\n        messagesContainer.classList.add('cdk-visually-hidden');\n        // @breaking-change 14.0.0 Remove null check for `_platform`.\n        if (this._platform && !this._platform.isBrowser) {\n            messagesContainer.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(messagesContainer);\n        this._messagesContainer = messagesContainer;\n    }\n    /** Removes all cdk-describedby messages that are hosted through the element. */\n    _removeCdkDescribedByReferenceIds(element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby').filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     */\n    _addMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, this._id);\n        registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     */\n    _removeMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /** Returns true if the element has been described by the provided message ID. */\n    _isElementDescribedByMessage(element, key) {\n        const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        const registeredMessage = this._messageRegistry.get(key);\n        const messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /** Determines whether a message can be described on a particular element. */\n    _canBeDescribed(element, message) {\n        if (!this._isElementNode(element)) {\n            return false;\n        }\n        if (message && typeof message === 'object') {\n            // We'd have to make some assumptions about the description element's text, if the consumer\n            // passed in an element. Assume that if an element is passed in, the consumer has verified\n            // that it can be used as a description.\n            return true;\n        }\n        const trimmedMessage = message == null ? '' : `${message}`.trim();\n        const ariaLabel = element.getAttribute('aria-label');\n        // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n        // element, because screen readers will end up reading out the same text twice in a row.\n        return trimmedMessage ? !ariaLabel || ariaLabel.trim() !== trimmedMessage : false;\n    }\n    /** Checks whether a node is an Element node. */\n    _isElementNode(element) {\n        return element.nodeType === this._document.ELEMENT_NODE;\n    }\n}\nAriaDescriber.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: AriaDescriber, deps: [{ token: DOCUMENT }, { token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nAriaDescriber.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: AriaDescriber, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: AriaDescriber, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1.Platform }]; } });\n/** Gets a key that can be used to look messages up in the registry. */\nfunction getKey(message, role) {\n    return typeof message === 'string' ? `${role || ''}/${message}` : message;\n}\n/** Assigns a unique ID to an element, if it doesn't have one already. */\nfunction setMessageId(element) {\n    if (!element.id) {\n        element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${nextId++}`;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nclass ListKeyManager {\n    constructor(_items) {\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._activeItem = null;\n        this._wrap = false;\n        this._letterKeyStream = new Subject();\n        this._typeaheadSubscription = Subscription.EMPTY;\n        this._vertical = true;\n        this._allowedModifierKeys = [];\n        this._homeAndEnd = false;\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = (item) => item.disabled;\n        // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /** Stream that emits whenever the active item of the list manager changes. */\n        this.change = new Subject();\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            _items.changes.subscribe((newItems) => {\n                if (this._activeItem) {\n                    const itemArray = newItems.toArray();\n                    const newIndex = itemArray.indexOf(this._activeItem);\n                    if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                        this._activeItemIndex = newIndex;\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param predicate Function that determines whether the given item should be skipped.\n     */\n    skipPredicate(predicate) {\n        this._skipPredicateFn = predicate;\n        return this;\n    }\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @param shouldWrap Whether the list should wrap when reaching the end.\n     */\n    withWrap(shouldWrap = true) {\n        this._wrap = shouldWrap;\n        return this;\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param enabled Whether vertical selection should be enabled.\n     */\n    withVerticalOrientation(enabled = true) {\n        this._vertical = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param direction Direction in which the selection can be moved.\n     */\n    withHorizontalOrientation(direction) {\n        this._horizontal = direction;\n        return this;\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     */\n    withAllowedModifierKeys(keys) {\n        this._allowedModifierKeys = keys;\n        return this;\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n     */\n    withTypeAhead(debounceInterval = 200) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n            this._items.length &&\n            this._items.some(item => typeof item.getLabel !== 'function')) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        this._typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        this._typeaheadSubscription = this._letterKeyStream\n            .pipe(tap(letter => this._pressedLetters.push(letter)), debounceTime(debounceInterval), filter(() => this._pressedLetters.length > 0), map(() => this._pressedLetters.join('')))\n            .subscribe(inputString => {\n            const items = this._getItemsArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                const index = (this._activeItemIndex + i) % items.length;\n                const item = items[index];\n                if (!this._skipPredicateFn(item) &&\n                    item.getLabel().toUpperCase().trim().indexOf(inputString) === 0) {\n                    this.setActiveItem(index);\n                    break;\n                }\n            }\n            this._pressedLetters = [];\n        });\n        return this;\n    }\n    /**\n     * Configures the key manager to activate the first and last items\n     * respectively when the Home or End key is pressed.\n     * @param enabled Whether pressing the Home or End key activates the first/last item.\n     */\n    withHomeAndEnd(enabled = true) {\n        this._homeAndEnd = enabled;\n        return this;\n    }\n    setActiveItem(item) {\n        const previousActiveItem = this._activeItem;\n        this.updateActiveItem(item);\n        if (this._activeItem !== previousActiveItem) {\n            this.change.next(this._activeItemIndex);\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param event Keyboard event to be used for determining which element should be active.\n     */\n    onKeydown(event) {\n        const keyCode = event.keyCode;\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        const isModifierAllowed = modifiers.every(modifier => {\n            return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n        });\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case HOME:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setFirstItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case END:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setLastItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n                    // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                    // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                    if (event.key && event.key.length === 1) {\n                        this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                    }\n                    else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                        this._letterKeyStream.next(String.fromCharCode(keyCode));\n                    }\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._pressedLetters = [];\n        event.preventDefault();\n    }\n    /** Index of the currently active item. */\n    get activeItemIndex() {\n        return this._activeItemIndex;\n    }\n    /** The active item. */\n    get activeItem() {\n        return this._activeItem;\n    }\n    /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n    isTyping() {\n        return this._pressedLetters.length > 0;\n    }\n    /** Sets the active item to the first enabled item in the list. */\n    setFirstItemActive() {\n        this._setActiveItemByIndex(0, 1);\n    }\n    /** Sets the active item to the last enabled item in the list. */\n    setLastItemActive() {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    }\n    /** Sets the active item to the next enabled item in the list. */\n    setNextItemActive() {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n    /** Sets the active item to a previous enabled item in the list. */\n    setPreviousItemActive() {\n        this._activeItemIndex < 0 && this._wrap\n            ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n    updateActiveItem(item) {\n        const itemArray = this._getItemsArray();\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        const activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem = activeItem == null ? null : activeItem;\n        this._activeItemIndex = index;\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     */\n    _setActiveItemByDelta(delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     */\n    _setActiveInWrapMode(delta) {\n        const items = this._getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            const index = (this._activeItemIndex + delta * i + items.length) % items.length;\n            const item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     */\n    _setActiveInDefaultMode(delta) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     */\n    _setActiveItemByIndex(index, fallbackDelta) {\n        const items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    }\n    /** Returns the items as an array. */\n    _getItemsArray() {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ActiveDescendantKeyManager extends ListKeyManager {\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass FocusKeyManager extends ListKeyManager {\n    constructor() {\n        super(...arguments);\n        this._origin = 'program';\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param origin Focus origin to be used when focusing items.\n     */\n    setFocusOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configuration for the isFocusable method.\n */\nclass IsFocusableConfig {\n    constructor() {\n        /**\n         * Whether to count an element as focusable even if it is not currently visible.\n         */\n        this.ignoreVisibility = false;\n    }\n}\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nclass InteractivityChecker {\n    constructor(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is disabled.\n     */\n    isDisabled(element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @returns Whether the element is visible.\n     */\n    isVisible(element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is tabbable.\n     */\n    isTabbable(element) {\n        // Nothing is tabbable on the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        const frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Browsers disable tabbing to an element inside of an invisible frame.\n            if (!this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        let nodeName = element.nodeName.toLowerCase();\n        let tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe' || nodeName === 'object') {\n            // The frame or object's content may be tabbable depending on the content, but it's\n            // not possibly to reliably detect the content of the frames. We always consider such\n            // elements as non-tabbable.\n            return false;\n        }\n        // In iOS, the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        if (nodeName === 'audio') {\n            // Audio elements without controls enabled are never tabbable, regardless\n            // of the tabindex attribute explicitly being set.\n            if (!element.hasAttribute('controls')) {\n                return false;\n            }\n            // Audio elements with controls are by default tabbable unless the\n            // tabindex attribute is set to `-1` explicitly.\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'video') {\n            // For all video elements, if the tabindex attribute is set to `-1`, the video\n            // is not tabbable. Note: We cannot rely on the default `HTMLElement.tabIndex`\n            // property as that one is set to `-1` in Chrome, Edge and Safari v13.1. The\n            // tabindex attribute is the source of truth here.\n            if (tabIndexValue === -1) {\n                return false;\n            }\n            // If the tabindex is explicitly set, and not `-1` (as per check before), the\n            // video element is always tabbable (regardless of whether it has controls or not).\n            if (tabIndexValue !== null) {\n                return true;\n            }\n            // Otherwise (when no explicit tabindex is set), a video is only tabbable if it\n            // has controls enabled. Firefox is special as videos are always tabbable regardless\n            // of whether there are controls or not.\n            return this._platform.FIREFOX || element.hasAttribute('controls');\n        }\n        return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param element Element to be checked.\n     * @param config The config object with options to customize this method's behavior\n     * @returns Whether the element is focusable.\n     */\n    isFocusable(element, config) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return (isPotentiallyFocusable(element) &&\n            !this.isDisabled(element) &&\n            (config?.ignoreVisibility || this.isVisible(element)));\n    }\n}\nInteractivityChecker.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: InteractivityChecker, deps: [{ token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nInteractivityChecker.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: InteractivityChecker, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: InteractivityChecker, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }]; } });\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n */\nfunction getFrameElement(window) {\n    try {\n        return window.frameElement;\n    }\n    catch {\n        return null;\n    }\n}\n/** Checks whether the specified element has any geometry / rectangles. */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth ||\n        element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/** Gets whether an element's  */\nfunction isNativeFormElement(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    return (nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea');\n}\n/** Gets whether an element is an `<input type=\"hidden\">`. */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/** Gets whether an element is an input element. */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    let tabIndex = element.getAttribute('tabindex');\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/** Checks whether the specified element is potentially tabbable on iOS */\nfunction isPotentiallyTabbableIOS(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    let inputType = nodeName === 'input' && element.type;\n    return (inputType === 'text' ||\n        inputType === 'password' ||\n        nodeName === 'select' ||\n        nodeName === 'textarea');\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return (isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element));\n}\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\nfunction getWindow(node) {\n    // ownerDocument is null if `node` itself *is* a document.\n    return (node.ownerDocument && node.ownerDocument.defaultView) || window;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause the two to be misaligned.\n *\n * @deprecated Use `ConfigurableFocusTrap` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrap {\n    constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._hasAttached = false;\n        // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n        this.startAnchorListener = () => this.focusLastTabbableElement();\n        this.endAnchorListener = () => this.focusFirstTabbableElement();\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(value, this._startAnchor);\n            this._toggleAnchorTabIndex(value, this._endAnchor);\n        }\n    }\n    /** Destroys the focus trap by cleaning up the anchors. */\n    destroy() {\n        const startAnchor = this._startAnchor;\n        const endAnchor = this._endAnchor;\n        if (startAnchor) {\n            startAnchor.removeEventListener('focus', this.startAnchorListener);\n            startAnchor.remove();\n        }\n        if (endAnchor) {\n            endAnchor.removeEventListener('focus', this.endAnchorListener);\n            endAnchor.remove();\n        }\n        this._startAnchor = this._endAnchor = null;\n        this._hasAttached = false;\n    }\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @returns Whether the focus trap managed to attach successfully. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    attachAnchors() {\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular(() => {\n            if (!this._startAnchor) {\n                this._startAnchor = this._createAnchor();\n                this._startAnchor.addEventListener('focus', this.startAnchorListener);\n            }\n            if (!this._endAnchor) {\n                this._endAnchor = this._createAnchor();\n                this._endAnchor.addEventListener('focus', this.endAnchorListener);\n            }\n        });\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore(this._startAnchor, this._element);\n            this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses the first tabbable element.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusInitialElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusInitialElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusFirstTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusFirstTabbableElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusLastTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusLastTabbableElement(options)));\n        });\n    }\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @param bound The boundary to get (start or end of trapped region).\n     * @returns The boundary element.\n     */\n    _getRegionBoundary(bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` + `[cdkFocusRegion${bound}], ` + `[cdk-focus-${bound}]`);\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            for (let i = 0; i < markers.length; i++) {\n                // @breaking-change 8.0.0\n                if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                        `attribute will be removed in 8.0.0.`, markers[i]);\n                }\n                else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                        `will be removed in 8.0.0.`, markers[i]);\n                }\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length\n            ? markers[markers.length - 1]\n            : this._getLastTabbableElement(this._element);\n    }\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @returns Whether focus was moved successfully.\n     */\n    focusInitialElement(options) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` + `[cdkFocusInitial]`);\n        if (redirectToElement) {\n            // @breaking-change 8.0.0\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n            }\n            // Warn the consumer if the element they've pointed to\n            // isn't focusable, when not in production mode.\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                !this._checker.isFocusable(redirectToElement)) {\n                console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n            }\n            if (!this._checker.isFocusable(redirectToElement)) {\n                const focusableChild = this._getFirstTabbableElement(redirectToElement);\n                focusableChild?.focus(options);\n                return !!focusableChild;\n            }\n            redirectToElement.focus(options);\n            return true;\n        }\n        return this.focusFirstTabbableElement(options);\n    }\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusFirstTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusLastTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Checks whether the focus trap has successfully been attached.\n     */\n    hasAttached() {\n        return this._hasAttached;\n    }\n    /** Get the first tabbable element from a DOM subtree (inclusive). */\n    _getFirstTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        const children = root.children;\n        for (let i = 0; i < children.length; i++) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getFirstTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Get the last tabbable element from a DOM subtree (inclusive). */\n    _getLastTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        const children = root.children;\n        for (let i = children.length - 1; i >= 0; i--) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getLastTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Creates an anchor element. */\n    _createAnchor() {\n        const anchor = this._document.createElement('div');\n        this._toggleAnchorTabIndex(this._enabled, anchor);\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        anchor.setAttribute('aria-hidden', 'true');\n        return anchor;\n    }\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @param isEnabled Whether the focus trap is enabled.\n     * @param anchor Anchor on which to toggle the tabindex.\n     */\n    _toggleAnchorTabIndex(isEnabled, anchor) {\n        // Remove the tabindex completely, rather than setting it to -1, because if the\n        // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n        isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n    }\n    /**\n     * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n     * @param enabled: Whether the anchors should trap Tab.\n     */\n    toggleAnchors(enabled) {\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(enabled, this._startAnchor);\n            this._toggleAnchorTabIndex(enabled, this._endAnchor);\n        }\n    }\n    /** Executes a function when the zone is stable. */\n    _executeOnStable(fn) {\n        if (this._ngZone.isStable) {\n            fn();\n        }\n        else {\n            this._ngZone.onStable.pipe(take(1)).subscribe(fn);\n        }\n    }\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n * @deprecated Use `ConfigurableFocusTrapFactory` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrapFactory {\n    constructor(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param element The element around which focus will be trapped.\n     * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @returns The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    }\n}\nFocusTrapFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FocusTrapFactory, deps: [{ token: InteractivityChecker }, { token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nFocusTrapFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FocusTrapFactory, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: InteractivityChecker }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/** Directive for trapping focus within a region. */\nclass CdkTrapFocus {\n    constructor(_elementRef, _focusTrapFactory, \n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 13.0.0\n     */\n    _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /** Previously focused element to restore focus to upon destroy when using autoCapture. */\n        this._previouslyFocusedElement = null;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this.focusTrap.enabled;\n    }\n    set enabled(value) {\n        this.focusTrap.enabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the directive should automatically move focus into the trapped region upon\n     * initialization and return focus to the previous activeElement upon destruction.\n     */\n    get autoCapture() {\n        return this._autoCapture;\n    }\n    set autoCapture(value) {\n        this._autoCapture = coerceBooleanProperty(value);\n    }\n    ngOnDestroy() {\n        this.focusTrap.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    }\n    ngAfterContentInit() {\n        this.focusTrap.attachAnchors();\n        if (this.autoCapture) {\n            this._captureFocus();\n        }\n    }\n    ngDoCheck() {\n        if (!this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    }\n    ngOnChanges(changes) {\n        const autoCaptureChange = changes['autoCapture'];\n        if (autoCaptureChange &&\n            !autoCaptureChange.firstChange &&\n            this.autoCapture &&\n            this.focusTrap.hasAttached()) {\n            this._captureFocus();\n        }\n    }\n    _captureFocus() {\n        this._previouslyFocusedElement = _getFocusedElementPierceShadowDom();\n        this.focusTrap.focusInitialElementWhenReady();\n    }\n}\nCdkTrapFocus.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTrapFocus, deps: [{ token: i0.ElementRef }, { token: FocusTrapFactory }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nCdkTrapFocus.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkTrapFocus, selector: \"[cdkTrapFocus]\", inputs: { enabled: [\"cdkTrapFocus\", \"enabled\"], autoCapture: [\"cdkTrapFocusAutoCapture\", \"autoCapture\"] }, exportAs: [\"cdkTrapFocus\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTrapFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTrapFocus]',\n                    exportAs: 'cdkTrapFocus',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: FocusTrapFactory }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { enabled: [{\n                type: Input,\n                args: ['cdkTrapFocus']\n            }], autoCapture: [{\n                type: Input,\n                args: ['cdkTrapFocusAutoCapture']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n    constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config) {\n        super(_element, _checker, _ngZone, _document, config.defer);\n        this._focusTrapManager = _focusTrapManager;\n        this._inertStrategy = _inertStrategy;\n        this._focusTrapManager.register(this);\n    }\n    /** Whether the FocusTrap is enabled. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._enabled) {\n            this._focusTrapManager.register(this);\n        }\n        else {\n            this._focusTrapManager.deregister(this);\n        }\n    }\n    /** Notifies the FocusTrapManager that this FocusTrap will be destroyed. */\n    destroy() {\n        this._focusTrapManager.deregister(this);\n        super.destroy();\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _enable() {\n        this._inertStrategy.preventFocus(this);\n        this.toggleAnchors(true);\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _disable() {\n        this._inertStrategy.allowFocus(this);\n        this.toggleAnchors(false);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the inert strategy. */\nconst FOCUS_TRAP_INERT_STRATEGY = new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n    constructor() {\n        /** Focus event handler. */\n        this._listener = null;\n    }\n    /** Adds a document event listener that keeps focus inside the FocusTrap. */\n    preventFocus(focusTrap) {\n        // Ensure there's only one listener per document\n        if (this._listener) {\n            focusTrap._document.removeEventListener('focus', this._listener, true);\n        }\n        this._listener = (e) => this._trapFocus(focusTrap, e);\n        focusTrap._ngZone.runOutsideAngular(() => {\n            focusTrap._document.addEventListener('focus', this._listener, true);\n        });\n    }\n    /** Removes the event listener added in preventFocus. */\n    allowFocus(focusTrap) {\n        if (!this._listener) {\n            return;\n        }\n        focusTrap._document.removeEventListener('focus', this._listener, true);\n        this._listener = null;\n    }\n    /**\n     * Refocuses the first element in the FocusTrap if the focus event target was outside\n     * the FocusTrap.\n     *\n     * This is an event listener callback. The event listener is added in runOutsideAngular,\n     * so all this code runs outside Angular as well.\n     */\n    _trapFocus(focusTrap, event) {\n        const target = event.target;\n        const focusTrapRoot = focusTrap._element;\n        // Don't refocus if target was in an overlay, because the overlay might be associated\n        // with an element inside the FocusTrap, ex. mat-select.\n        if (target && !focusTrapRoot.contains(target) && !target.closest?.('div.cdk-overlay-pane')) {\n            // Some legacy FocusTrap usages have logic that focuses some element on the page\n            // just before FocusTrap is destroyed. For backwards compatibility, wait\n            // to be sure FocusTrap is still enabled before refocusing.\n            setTimeout(() => {\n                // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n                if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n                    focusTrap.focusFirstTabbableElement();\n                }\n            });\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\nclass FocusTrapManager {\n    constructor() {\n        // A stack of the FocusTraps on the page. Only the FocusTrap at the\n        // top of the stack is active.\n        this._focusTrapStack = [];\n    }\n    /**\n     * Disables the FocusTrap at the top of the stack, and then pushes\n     * the new FocusTrap onto the stack.\n     */\n    register(focusTrap) {\n        // Dedupe focusTraps that register multiple times.\n        this._focusTrapStack = this._focusTrapStack.filter(ft => ft !== focusTrap);\n        let stack = this._focusTrapStack;\n        if (stack.length) {\n            stack[stack.length - 1]._disable();\n        }\n        stack.push(focusTrap);\n        focusTrap._enable();\n    }\n    /**\n     * Removes the FocusTrap from the stack, and activates the\n     * FocusTrap that is the new top of the stack.\n     */\n    deregister(focusTrap) {\n        focusTrap._disable();\n        const stack = this._focusTrapStack;\n        const i = stack.indexOf(focusTrap);\n        if (i !== -1) {\n            stack.splice(i, 1);\n            if (stack.length) {\n                stack[stack.length - 1]._enable();\n            }\n        }\n    }\n}\nFocusTrapManager.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FocusTrapManager, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nFocusTrapManager.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FocusTrapManager, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FocusTrapManager, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Factory that allows easy instantiation of configurable focus traps. */\nclass ConfigurableFocusTrapFactory {\n    constructor(_checker, _ngZone, _focusTrapManager, _document, _inertStrategy) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._focusTrapManager = _focusTrapManager;\n        this._document = _document;\n        // TODO split up the strategies into different modules, similar to DateAdapter.\n        this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();\n    }\n    create(element, config = { defer: false }) {\n        let configObject;\n        if (typeof config === 'boolean') {\n            configObject = { defer: config };\n        }\n        else {\n            configObject = config;\n        }\n        return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject);\n    }\n}\nConfigurableFocusTrapFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ConfigurableFocusTrapFactory, deps: [{ token: InteractivityChecker }, { token: i0.NgZone }, { token: FocusTrapManager }, { token: DOCUMENT }, { token: FOCUS_TRAP_INERT_STRATEGY, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nConfigurableFocusTrapFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ConfigurableFocusTrapFactory, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ConfigurableFocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: InteractivityChecker }, { type: i0.NgZone }, { type: FocusTrapManager }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FOCUS_TRAP_INERT_STRATEGY]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Gets whether an event could be a faked `mousedown` event dispatched by a screen reader. */\nfunction isFakeMousedownFromScreenReader(event) {\n    // Some screen readers will dispatch a fake `mousedown` event when pressing enter or space on\n    // a clickable element. We can distinguish these events when both `offsetX` and `offsetY` are\n    // zero or `event.buttons` is zero, depending on the browser:\n    // - `event.buttons` works on Firefox, but fails on Chrome.\n    // - `offsetX` and `offsetY` work on Chrome, but fail on Firefox.\n    // Note that there's an edge case where the user could click the 0x0 spot of the\n    // screen themselves, but that is unlikely to contain interactive elements.\n    return event.buttons === 0 || (event.offsetX === 0 && event.offsetY === 0);\n}\n/** Gets whether an event could be a faked `touchstart` event dispatched by a screen reader. */\nfunction isFakeTouchstartFromScreenReader(event) {\n    const touch = (event.touches && event.touches[0]) || (event.changedTouches && event.changedTouches[0]);\n    // A fake `touchstart` can be distinguished from a real one by looking at the `identifier`\n    // which is typically >= 0 on a real device versus -1 from a screen reader. Just to be safe,\n    // we can also look at `radiusX` and `radiusY`. This behavior was observed against a Windows 10\n    // device with a touch screen running NVDA v2020.4 and Firefox 85 or Chrome 88.\n    return (!!touch &&\n        touch.identifier === -1 &&\n        (touch.radiusX == null || touch.radiusX === 1) &&\n        (touch.radiusY == null || touch.radiusY === 1));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injectable options for the InputModalityDetector. These are shallowly merged with the default\n * options.\n */\nconst INPUT_MODALITY_DETECTOR_OPTIONS = new InjectionToken('cdk-input-modality-detector-options');\n/**\n * Default options for the InputModalityDetector.\n *\n * Modifier keys are ignored by default (i.e. when pressed won't cause the service to detect\n * keyboard input modality) for two reasons:\n *\n * 1. Modifier keys are commonly used with mouse to perform actions such as 'right click' or 'open\n *    in new tab', and are thus less representative of actual keyboard interaction.\n * 2. VoiceOver triggers some keyboard events when linearly navigating with Control + Option (but\n *    confusingly not with Caps Lock). Thus, to have parity with other screen readers, we ignore\n *    these keys so as to not update the input modality.\n *\n * Note that we do not by default ignore the right Meta key on Safari because it has the same key\n * code as the ContextMenu key on other browsers. When we switch to using event.key, we can\n * distinguish between the two.\n */\nconst INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS = {\n    ignoreKeys: [ALT, CONTROL, MAC_META, META, SHIFT],\n};\n/**\n * The amount of time needed to pass after a touchstart event in order for a subsequent mousedown\n * event to be attributed as mouse and not touch.\n *\n * This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n * that a value of around 650ms seems appropriate.\n */\nconst TOUCH_BUFFER_MS = 650;\n/**\n * Event listener options that enable capturing and also mark the listener as passive if the browser\n * supports it.\n */\nconst modalityEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/**\n * Service that detects the user's input modality.\n *\n * This service does not update the input modality when a user navigates with a screen reader\n * (e.g. linear navigation with VoiceOver, object navigation / browse mode with NVDA, virtual PC\n * cursor mode with JAWS). This is in part due to technical limitations (i.e. keyboard events do not\n * fire as expected in these modes) but is also arguably the correct behavior. Navigating with a\n * screen reader is akin to visually scanning a page, and should not be interpreted as actual user\n * input interaction.\n *\n * When a user is not navigating but *interacting* with a screen reader, this service attempts to\n * update the input modality to keyboard, but in general this service's behavior is largely\n * undefined.\n */\nclass InputModalityDetector {\n    constructor(_platform, ngZone, document, options) {\n        this._platform = _platform;\n        /**\n         * The most recently detected input modality event target. Is null if no input modality has been\n         * detected or if the associated event target is null for some unknown reason.\n         */\n        this._mostRecentTarget = null;\n        /** The underlying BehaviorSubject that emits whenever an input modality is detected. */\n        this._modality = new BehaviorSubject(null);\n        /**\n         * The timestamp of the last touch input modality. Used to determine whether mousedown events\n         * should be attributed to mouse or touch.\n         */\n        this._lastTouchMs = 0;\n        /**\n         * Handles keydown events. Must be an arrow function in order to preserve the context when it gets\n         * bound.\n         */\n        this._onKeydown = (event) => {\n            // If this is one of the keys we should ignore, then ignore it and don't update the input\n            // modality to keyboard.\n            if (this._options?.ignoreKeys?.some(keyCode => keyCode === event.keyCode)) {\n                return;\n            }\n            this._modality.next('keyboard');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        /**\n         * Handles mousedown events. Must be an arrow function in order to preserve the context when it\n         * gets bound.\n         */\n        this._onMousedown = (event) => {\n            // Touches trigger both touch and mouse events, so we need to distinguish between mouse events\n            // that were triggered via mouse vs touch. To do so, check if the mouse event occurs closely\n            // after the previous touch event.\n            if (Date.now() - this._lastTouchMs < TOUCH_BUFFER_MS) {\n                return;\n            }\n            // Fake mousedown events are fired by some screen readers when controls are activated by the\n            // screen reader. Attribute them to keyboard input modality.\n            this._modality.next(isFakeMousedownFromScreenReader(event) ? 'keyboard' : 'mouse');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        /**\n         * Handles touchstart events. Must be an arrow function in order to preserve the context when it\n         * gets bound.\n         */\n        this._onTouchstart = (event) => {\n            // Same scenario as mentioned in _onMousedown, but on touch screen devices, fake touchstart\n            // events are fired. Again, attribute to keyboard input modality.\n            if (isFakeTouchstartFromScreenReader(event)) {\n                this._modality.next('keyboard');\n                return;\n            }\n            // Store the timestamp of this touch event, as it's used to distinguish between mouse events\n            // triggered via mouse vs touch.\n            this._lastTouchMs = Date.now();\n            this._modality.next('touch');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        this._options = {\n            ...INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS,\n            ...options,\n        };\n        // Skip the first emission as it's null.\n        this.modalityDetected = this._modality.pipe(skip(1));\n        this.modalityChanged = this.modalityDetected.pipe(distinctUntilChanged());\n        // If we're not in a browser, this service should do nothing, as there's no relevant input\n        // modality to detect.\n        if (_platform.isBrowser) {\n            ngZone.runOutsideAngular(() => {\n                document.addEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n                document.addEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n                document.addEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n            });\n        }\n    }\n    /** The most recently detected input modality. */\n    get mostRecentModality() {\n        return this._modality.value;\n    }\n    ngOnDestroy() {\n        this._modality.complete();\n        if (this._platform.isBrowser) {\n            document.removeEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n            document.removeEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n            document.removeEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n        }\n    }\n}\nInputModalityDetector.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: InputModalityDetector, deps: [{ token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT }, { token: INPUT_MODALITY_DETECTOR_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nInputModalityDetector.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: InputModalityDetector, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: InputModalityDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }, { type: i0.NgZone }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [INPUT_MODALITY_DETECTOR_OPTIONS]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/** @docs-private */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n/** Injection token that can be used to configure the default options for the LiveAnnouncer. */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass LiveAnnouncer {\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        // We inject the live element and document as `any` because the constructor signature cannot\n        // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n        // a class decorator causes TypeScript to preserve the constructor signature types.\n        this._document = _document;\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    announce(message, ...args) {\n        const defaultOptions = this._defaultOptions;\n        let politeness;\n        let duration;\n        if (args.length === 1 && typeof args[0] === 'number') {\n            duration = args[0];\n        }\n        else {\n            [politeness, duration] = args;\n        }\n        this.clear();\n        clearTimeout(this._previousTimeout);\n        if (!politeness) {\n            politeness =\n                defaultOptions && defaultOptions.politeness ? defaultOptions.politeness : 'polite';\n        }\n        if (duration == null && defaultOptions) {\n            duration = defaultOptions.duration;\n        }\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return this._ngZone.runOutsideAngular(() => {\n            if (!this._currentPromise) {\n                this._currentPromise = new Promise(resolve => (this._currentResolve = resolve));\n            }\n            clearTimeout(this._previousTimeout);\n            this._previousTimeout = setTimeout(() => {\n                this._liveElement.textContent = message;\n                if (typeof duration === 'number') {\n                    this._previousTimeout = setTimeout(() => this.clear(), duration);\n                }\n                this._currentResolve();\n                this._currentPromise = this._currentResolve = undefined;\n            }, 100);\n            return this._currentPromise;\n        });\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     */\n    clear() {\n        if (this._liveElement) {\n            this._liveElement.textContent = '';\n        }\n    }\n    ngOnDestroy() {\n        clearTimeout(this._previousTimeout);\n        this._liveElement?.remove();\n        this._liveElement = null;\n        this._currentResolve?.();\n        this._currentPromise = this._currentResolve = undefined;\n    }\n    _createLiveElement() {\n        const elementClass = 'cdk-live-announcer-element';\n        const previousElements = this._document.getElementsByClassName(elementClass);\n        const liveEl = this._document.createElement('div');\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (let i = 0; i < previousElements.length; i++) {\n            previousElements[i].remove();\n        }\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    }\n}\nLiveAnnouncer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: LiveAnnouncer, deps: [{ token: LIVE_ANNOUNCER_ELEMENT_TOKEN, optional: true }, { token: i0.NgZone }, { token: DOCUMENT }, { token: LIVE_ANNOUNCER_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nLiveAnnouncer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: LiveAnnouncer, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: LiveAnnouncer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LIVE_ANNOUNCER_ELEMENT_TOKEN]\n                }] }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS]\n                }] }]; } });\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nclass CdkAriaLive {\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n        this._elementRef = _elementRef;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._contentObserver = _contentObserver;\n        this._ngZone = _ngZone;\n        this._politeness = 'polite';\n    }\n    /** The aria-live politeness level to use when announcing messages. */\n    get politeness() {\n        return this._politeness;\n    }\n    set politeness(value) {\n        this._politeness = value === 'off' || value === 'assertive' ? value : 'polite';\n        if (this._politeness === 'off') {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n                this._subscription = null;\n            }\n        }\n        else if (!this._subscription) {\n            this._subscription = this._ngZone.runOutsideAngular(() => {\n                return this._contentObserver.observe(this._elementRef).subscribe(() => {\n                    // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n                    const elementText = this._elementRef.nativeElement.textContent;\n                    // The `MutationObserver` fires also for attribute\n                    // changes which we don't want to announce.\n                    if (elementText !== this._previousAnnouncedText) {\n                        this._liveAnnouncer.announce(elementText, this._politeness);\n                        this._previousAnnouncedText = elementText;\n                    }\n                });\n            });\n        }\n    }\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n}\nCdkAriaLive.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkAriaLive, deps: [{ token: i0.ElementRef }, { token: LiveAnnouncer }, { token: i1$1.ContentObserver }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nCdkAriaLive.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkAriaLive, selector: \"[cdkAriaLive]\", inputs: { politeness: [\"cdkAriaLive\", \"politeness\"] }, exportAs: [\"cdkAriaLive\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkAriaLive, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkAriaLive]',\n                    exportAs: 'cdkAriaLive',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: LiveAnnouncer }, { type: i1$1.ContentObserver }, { type: i0.NgZone }]; }, propDecorators: { politeness: [{\n                type: Input,\n                args: ['cdkAriaLive']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** InjectionToken for FocusMonitorOptions. */\nconst FOCUS_MONITOR_DEFAULT_OPTIONS = new InjectionToken('cdk-focus-monitor-default-options');\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\nclass FocusMonitor {\n    constructor(_ngZone, _platform, _inputModalityDetector, \n    /** @breaking-change 11.0.0 make document required */\n    document, options) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._inputModalityDetector = _inputModalityDetector;\n        /** The focus origin that the next focus event is a result of. */\n        this._origin = null;\n        /** Whether the window has just been focused. */\n        this._windowFocused = false;\n        /**\n         * Whether the origin was determined via a touch interaction. Necessary as properly attributing\n         * focus events to touch interactions requires special logic.\n         */\n        this._originFromTouchInteraction = false;\n        /** Map of elements being monitored to their info. */\n        this._elementInfo = new Map();\n        /** The number of elements currently being monitored. */\n        this._monitoredElementCount = 0;\n        /**\n         * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n         * as well as the number of monitored elements that they contain. We have to treat focus/blur\n         * handlers differently from the rest of the events, because the browser won't emit events\n         * to the document when focus moves inside of a shadow root.\n         */\n        this._rootNodeFocusListenerCount = new Map();\n        /**\n         * Event listener for `focus` events on the window.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._windowFocusListener = () => {\n            // Make a note of when the window regains focus, so we can\n            // restore the origin info for the focused element.\n            this._windowFocused = true;\n            this._windowFocusTimeoutId = window.setTimeout(() => (this._windowFocused = false));\n        };\n        /** Subject for stopping our InputModalityDetector subscription. */\n        this._stopInputModalityDetector = new Subject();\n        /**\n         * Event listener for `focus` and 'blur' events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._rootNodeFocusAndBlurListener = (event) => {\n            const target = _getEventTarget(event);\n            const handler = event.type === 'focus' ? this._onFocus : this._onBlur;\n            // We need to walk up the ancestor chain in order to support `checkChildren`.\n            for (let element = target; element; element = element.parentElement) {\n                handler.call(this, event, element);\n            }\n        };\n        this._document = document;\n        this._detectionMode = options?.detectionMode || 0 /* IMMEDIATE */;\n    }\n    monitor(element, checkChildren = false) {\n        const nativeElement = coerceElement(element);\n        // Do nothing if we're not on the browser platform or the passed in node isn't an element.\n        if (!this._platform.isBrowser || nativeElement.nodeType !== 1) {\n            return of(null);\n        }\n        // If the element is inside the shadow DOM, we need to bind our focus/blur listeners to\n        // the shadow root, rather than the `document`, because the browser won't emit focus events\n        // to the `document`, if focus is moving within the same shadow root.\n        const rootNode = _getShadowRoot(nativeElement) || this._getDocument();\n        const cachedInfo = this._elementInfo.get(nativeElement);\n        // Check if we're already monitoring this element.\n        if (cachedInfo) {\n            if (checkChildren) {\n                // TODO(COMP-318): this can be problematic, because it'll turn all non-checkChildren\n                // observers into ones that behave as if `checkChildren` was turned on. We need a more\n                // robust solution.\n                cachedInfo.checkChildren = true;\n            }\n            return cachedInfo.subject;\n        }\n        // Create monitored element info.\n        const info = {\n            checkChildren: checkChildren,\n            subject: new Subject(),\n            rootNode,\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._registerGlobalListeners(info);\n        return info.subject;\n    }\n    stopMonitoring(element) {\n        const nativeElement = coerceElement(element);\n        const elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._removeGlobalListeners(elementInfo);\n        }\n    }\n    focusVia(element, origin, options) {\n        const nativeElement = coerceElement(element);\n        const focusedElement = this._getDocument().activeElement;\n        // If the element is focused already, calling `focus` again won't trigger the event listener\n        // which means that the focus classes won't be updated. If that's the case, update the classes\n        // directly without waiting for an event.\n        if (nativeElement === focusedElement) {\n            this._getClosestElementsInfo(nativeElement).forEach(([currentElement, info]) => this._originChanged(currentElement, origin, info));\n        }\n        else {\n            this._setOrigin(origin);\n            // `focus` isn't available on the server\n            if (typeof nativeElement.focus === 'function') {\n                nativeElement.focus(options);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    _getFocusOrigin(focusEventTarget) {\n        if (this._origin) {\n            // If the origin was realized via a touch interaction, we need to perform additional checks\n            // to determine whether the focus origin should be attributed to touch or program.\n            if (this._originFromTouchInteraction) {\n                return this._shouldBeAttributedToTouch(focusEventTarget) ? 'touch' : 'program';\n            }\n            else {\n                return this._origin;\n            }\n        }\n        // If the window has just regained focus, we can restore the most recent origin from before the\n        // window blurred. Otherwise, we've reached the point where we can't identify the source of the\n        // focus. This typically means one of two things happened:\n        //\n        // 1) The element was programmatically focused, or\n        // 2) The element was focused via screen reader navigation (which generally doesn't fire\n        //    events).\n        //\n        // Because we can't distinguish between these two cases, we default to setting `program`.\n        return this._windowFocused && this._lastFocusOrigin ? this._lastFocusOrigin : 'program';\n    }\n    /**\n     * Returns whether the focus event should be attributed to touch. Recall that in IMMEDIATE mode, a\n     * touch origin isn't immediately reset at the next tick (see _setOrigin). This means that when we\n     * handle a focus event following a touch interaction, we need to determine whether (1) the focus\n     * event was directly caused by the touch interaction or (2) the focus event was caused by a\n     * subsequent programmatic focus call triggered by the touch interaction.\n     * @param focusEventTarget The target of the focus event under examination.\n     */\n    _shouldBeAttributedToTouch(focusEventTarget) {\n        // Please note that this check is not perfect. Consider the following edge case:\n        //\n        // <div #parent tabindex=\"0\">\n        //   <div #child tabindex=\"0\" (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // Suppose there is a FocusMonitor in IMMEDIATE mode attached to #parent. When the user touches\n        // #child, #parent is programmatically focused. This code will attribute the focus to touch\n        // instead of program. This is a relatively minor edge-case that can be worked around by using\n        // focusVia(parent, 'program') to focus #parent.\n        return (this._detectionMode === 1 /* EVENTUAL */ ||\n            !!focusEventTarget?.contains(this._inputModalityDetector._mostRecentTarget));\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param element The element to update the classes on.\n     * @param origin The focus origin.\n     */\n    _setClasses(element, origin) {\n        element.classList.toggle('cdk-focused', !!origin);\n        element.classList.toggle('cdk-touch-focused', origin === 'touch');\n        element.classList.toggle('cdk-keyboard-focused', origin === 'keyboard');\n        element.classList.toggle('cdk-mouse-focused', origin === 'mouse');\n        element.classList.toggle('cdk-program-focused', origin === 'program');\n    }\n    /**\n     * Updates the focus origin. If we're using immediate detection mode, we schedule an async\n     * function to clear the origin at the end of a timeout. The duration of the timeout depends on\n     * the origin being set.\n     * @param origin The origin to set.\n     * @param isFromInteraction Whether we are setting the origin from an interaction event.\n     */\n    _setOrigin(origin, isFromInteraction = false) {\n        this._ngZone.runOutsideAngular(() => {\n            this._origin = origin;\n            this._originFromTouchInteraction = origin === 'touch' && isFromInteraction;\n            // If we're in IMMEDIATE mode, reset the origin at the next tick (or in `TOUCH_BUFFER_MS` ms\n            // for a touch event). We reset the origin at the next tick because Firefox focuses one tick\n            // after the interaction event. We wait `TOUCH_BUFFER_MS` ms before resetting the origin for\n            // a touch event because when a touch event is fired, the associated focus event isn't yet in\n            // the event queue. Before doing so, clear any pending timeouts.\n            if (this._detectionMode === 0 /* IMMEDIATE */) {\n                clearTimeout(this._originTimeoutId);\n                const ms = this._originFromTouchInteraction ? TOUCH_BUFFER_MS : 1;\n                this._originTimeoutId = setTimeout(() => (this._origin = null), ms);\n            }\n        });\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @param event The focus event.\n     * @param element The monitored element.\n     */\n    _onFocus(event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        const elementInfo = this._elementInfo.get(element);\n        const focusEventTarget = _getEventTarget(event);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== focusEventTarget)) {\n            return;\n        }\n        this._originChanged(element, this._getFocusOrigin(focusEventTarget), elementInfo);\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param event The blur event.\n     * @param element The monitored element.\n     */\n    _onBlur(event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo ||\n            (elementInfo.checkChildren &&\n                event.relatedTarget instanceof Node &&\n                element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo.subject, null);\n    }\n    _emitOrigin(subject, origin) {\n        this._ngZone.run(() => subject.next(origin));\n    }\n    _registerGlobalListeners(elementInfo) {\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        const rootNode = elementInfo.rootNode;\n        const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode) || 0;\n        if (!rootNodeFocusListeners) {\n            this._ngZone.runOutsideAngular(() => {\n                rootNode.addEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.addEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n            });\n        }\n        this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners + 1);\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount === 1) {\n            // Note: we listen to events in the capture phase so we\n            // can detect them even if the user stops propagation.\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                window.addEventListener('focus', this._windowFocusListener);\n            });\n            // The InputModalityDetector is also just a collection of global listeners.\n            this._inputModalityDetector.modalityDetected\n                .pipe(takeUntil(this._stopInputModalityDetector))\n                .subscribe(modality => {\n                this._setOrigin(modality, true /* isFromInteraction */);\n            });\n        }\n    }\n    _removeGlobalListeners(elementInfo) {\n        const rootNode = elementInfo.rootNode;\n        if (this._rootNodeFocusListenerCount.has(rootNode)) {\n            const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode);\n            if (rootNodeFocusListeners > 1) {\n                this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners - 1);\n            }\n            else {\n                rootNode.removeEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.removeEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                this._rootNodeFocusListenerCount.delete(rootNode);\n            }\n        }\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            const window = this._getWindow();\n            window.removeEventListener('focus', this._windowFocusListener);\n            // Equivalently, stop our InputModalityDetector subscription.\n            this._stopInputModalityDetector.next();\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        }\n    }\n    /** Updates all the state on an element once its focus origin has changed. */\n    _originChanged(element, origin, elementInfo) {\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo.subject, origin);\n        this._lastFocusOrigin = origin;\n    }\n    /**\n     * Collects the `MonitoredElementInfo` of a particular element and\n     * all of its ancestors that have enabled `checkChildren`.\n     * @param element Element from which to start the search.\n     */\n    _getClosestElementsInfo(element) {\n        const results = [];\n        this._elementInfo.forEach((info, currentElement) => {\n            if (currentElement === element || (info.checkChildren && currentElement.contains(element))) {\n                results.push([currentElement, info]);\n            }\n        });\n        return results;\n    }\n}\nFocusMonitor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FocusMonitor, deps: [{ token: i0.NgZone }, { token: i1.Platform }, { token: InputModalityDetector }, { token: DOCUMENT, optional: true }, { token: FOCUS_MONITOR_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nFocusMonitor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FocusMonitor, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FocusMonitor, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i1.Platform }, { type: InputModalityDetector }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FOCUS_MONITOR_DEFAULT_OPTIONS]\n                }] }]; } });\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nclass CdkMonitorFocus {\n    constructor(_elementRef, _focusMonitor) {\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this.cdkFocusChange = new EventEmitter();\n    }\n    ngAfterViewInit() {\n        const element = this._elementRef.nativeElement;\n        this._monitorSubscription = this._focusMonitor\n            .monitor(element, element.nodeType === 1 && element.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe(origin => this.cdkFocusChange.emit(origin));\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        if (this._monitorSubscription) {\n            this._monitorSubscription.unsubscribe();\n        }\n    }\n}\nCdkMonitorFocus.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkMonitorFocus, deps: [{ token: i0.ElementRef }, { token: FocusMonitor }], target: i0.ɵɵFactoryTarget.Directive });\nCdkMonitorFocus.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: { cdkFocusChange: \"cdkFocusChange\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkMonitorFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: FocusMonitor }]; }, propDecorators: { cdkFocusChange: [{\n                type: Output\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** CSS class applied to the document body when in black-on-white high-contrast mode. */\nconst BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n/** CSS class applied to the document body when in white-on-black high-contrast mode. */\nconst WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n/** CSS class applied to the document body when in high-contrast mode. */\nconst HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n/**\n * Service to determine whether the browser is currently in a high-contrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\nclass HighContrastModeDetector {\n    constructor(_platform, document) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    /** Gets the current high-contrast-mode for the page. */\n    getHighContrastMode() {\n        if (!this._platform.isBrowser) {\n            return 0 /* NONE */;\n        }\n        // Create a test element with an arbitrary background-color that is neither black nor\n        // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n        // appending the test element to the DOM does not affect layout by absolutely positioning it\n        const testElement = this._document.createElement('div');\n        testElement.style.backgroundColor = 'rgb(1,2,3)';\n        testElement.style.position = 'absolute';\n        this._document.body.appendChild(testElement);\n        // Get the computed style for the background color, collapsing spaces to normalize between\n        // browsers. Once we get this color, we no longer need the test element. Access the `window`\n        // via the document so we can fake it in tests. Note that we have extra null checks, because\n        // this logic will likely run during app bootstrap and throwing can break the entire app.\n        const documentWindow = this._document.defaultView || window;\n        const computedStyle = documentWindow && documentWindow.getComputedStyle\n            ? documentWindow.getComputedStyle(testElement)\n            : null;\n        const computedColor = ((computedStyle && computedStyle.backgroundColor) || '').replace(/ /g, '');\n        testElement.remove();\n        switch (computedColor) {\n            case 'rgb(0,0,0)':\n                return 2 /* WHITE_ON_BLACK */;\n            case 'rgb(255,255,255)':\n                return 1 /* BLACK_ON_WHITE */;\n        }\n        return 0 /* NONE */;\n    }\n    /** Applies CSS classes indicating high-contrast mode to document body (browser-only). */\n    _applyBodyHighContrastModeCssClasses() {\n        if (!this._hasCheckedHighContrastMode && this._platform.isBrowser && this._document.body) {\n            const bodyClasses = this._document.body.classList;\n            // IE11 doesn't support `classList` operations with multiple arguments\n            bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n            bodyClasses.remove(BLACK_ON_WHITE_CSS_CLASS);\n            bodyClasses.remove(WHITE_ON_BLACK_CSS_CLASS);\n            this._hasCheckedHighContrastMode = true;\n            const mode = this.getHighContrastMode();\n            if (mode === 1 /* BLACK_ON_WHITE */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n                bodyClasses.add(BLACK_ON_WHITE_CSS_CLASS);\n            }\n            else if (mode === 2 /* WHITE_ON_BLACK */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n                bodyClasses.add(WHITE_ON_BLACK_CSS_CLASS);\n            }\n        }\n    }\n}\nHighContrastModeDetector.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: HighContrastModeDetector, deps: [{ token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nHighContrastModeDetector.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: HighContrastModeDetector, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: HighContrastModeDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass A11yModule {\n    constructor(highContrastModeDetector) {\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    }\n}\nA11yModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: A11yModule, deps: [{ token: HighContrastModeDetector }], target: i0.ɵɵFactoryTarget.NgModule });\nA11yModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: A11yModule, declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus], imports: [ObserversModule], exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus] });\nA11yModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: A11yModule, imports: [[ObserversModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: A11yModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ObserversModule],\n                    declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                    exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                }]\n        }], ctorParameters: function () { return [{ type: HighContrastModeDetector }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A11yModule, ActiveDescendantKeyManager, AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, CdkAriaLive, CdkMonitorFocus, CdkTrapFocus, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_MONITOR_DEFAULT_OPTIONS, FOCUS_TRAP_INERT_STRATEGY, FocusKeyManager, FocusMonitor, FocusTrap, FocusTrapFactory, HighContrastModeDetector, INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS, INPUT_MODALITY_DETECTOR_OPTIONS, InputModalityDetector, InteractivityChecker, IsFocusableConfig, LIVE_ANNOUNCER_DEFAULT_OPTIONS, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, ListKeyManager, LiveAnnouncer, MESSAGES_CONTAINER_ID, isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, Injectable, Optional, Inject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/** @docs-private */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Regex that matches locales with an RTL script. Taken from `goog.i18n.bidi.isRtlLanguage`. */\nconst RTL_LOCALE_PATTERN = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;\n/** Resolves a string value to a specific direction. */\nfunction _resolveDirectionality(rawValue) {\n    const value = rawValue?.toLowerCase() || '';\n    if (value === 'auto' && typeof navigator !== 'undefined' && navigator?.language) {\n        return RTL_LOCALE_PATTERN.test(navigator.language) ? 'rtl' : 'ltr';\n    }\n    return value === 'rtl' ? 'rtl' : 'ltr';\n}\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    constructor(_document) {\n        /** The current 'ltr' or 'rtl' value. */\n        this.value = 'ltr';\n        /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n        this.change = new EventEmitter();\n        if (_document) {\n            const bodyDir = _document.body ? _document.body.dir : null;\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            this.value = _resolveDirectionality(bodyDir || htmlDir || 'ltr');\n        }\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDirectionality.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: Directionality, deps: [{ token: DIR_DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nDirectionality.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: Directionality, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: Directionality, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DIR_DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /** Normalized direction that accounts for invalid/unsupported values. */\n        this._dir = 'ltr';\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Event emitted when the direction changes. */\n        this.change = new EventEmitter();\n    }\n    /** @docs-private */\n    get dir() {\n        return this._dir;\n    }\n    set dir(value) {\n        const previousValue = this._dir;\n        // Note: `_resolveDirectionality` resolves the language based on the browser's language,\n        // whereas the browser does it based on the content of the element. Since doing so based\n        // on the content can be expensive, for now we're doing the simpler matching.\n        this._dir = _resolveDirectionality(value);\n        this._rawDir = value;\n        if (previousValue !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /** Current layout direction of the element. */\n    get value() {\n        return this.dir;\n    }\n    /** Initialize once default value has been set. */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDir.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: Dir, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nDir.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: Dir, selector: \"[dir]\", inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, host: { properties: { \"attr.dir\": \"_rawDir\" } }, providers: [{ provide: Directionality, useExisting: Dir }], exportAs: [\"dir\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: Dir, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[dir]',\n                    providers: [{ provide: Directionality, useExisting: Dir }],\n                    host: { '[attr.dir]': '_rawDir' },\n                    exportAs: 'dir',\n                }]\n        }], propDecorators: { change: [{\n                type: Output,\n                args: ['dirChange']\n            }], dir: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BidiModule {\n}\nBidiModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: BidiModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBidiModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: BidiModule, declarations: [Dir], exports: [Dir] });\nBidiModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: BidiModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: BidiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [Dir],\n                    declarations: [Dir],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality };\n","import { Version } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of the Angular Component Development Kit. */\nconst VERSION = new Version('13.3.9');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { VERSION };\n","import { ElementRef } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a data-bound value (typically a string) to a boolean. */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Coerces a value to an array of trimmed non-empty strings.\n * Any input that is not an array, `null` or `undefined` will be turned into a string\n * via `toString()` and subsequently split with the given separator.\n * `null` and `undefined` will result in an empty array.\n * This results in the following outcomes:\n * - `null` -&gt; `[]`\n * - `[null]` -&gt; `[\"null\"]`\n * - `[\"a\", \"b \", \" \"]` -&gt; `[\"a\", \"b\"]`\n * - `[1, [2, 3]]` -&gt; `[\"1\", \"2,3\"]`\n * - `[{ a: 0 }]` -&gt; `[\"[object Object]\"]`\n * - `{ a: 0 }` -&gt; `[\"[object\", \"Object]\"]`\n *\n * Useful for defining CSS classes or table columns.\n * @param value the value to coerce into an array of strings\n * @param separator split-separator if value isn't an array\n */\nfunction coerceStringArray(value, separator = /\\s+/) {\n    const result = [];\n    if (value != null) {\n        const sourceValues = Array.isArray(value) ? value : `${value}`.split(separator);\n        for (const sourceValue of sourceValues) {\n            const trimmedString = `${sourceValue}`.trim();\n            if (trimmedString) {\n                result.push(trimmedString);\n            }\n        }\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty, coerceStringArray };\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAC_ENTER = 3;\nconst BACKSPACE = 8;\nconst TAB = 9;\nconst NUM_CENTER = 12;\nconst ENTER = 13;\nconst SHIFT = 16;\nconst CONTROL = 17;\nconst ALT = 18;\nconst PAUSE = 19;\nconst CAPS_LOCK = 20;\nconst ESCAPE = 27;\nconst SPACE = 32;\nconst PAGE_UP = 33;\nconst PAGE_DOWN = 34;\nconst END = 35;\nconst HOME = 36;\nconst LEFT_ARROW = 37;\nconst UP_ARROW = 38;\nconst RIGHT_ARROW = 39;\nconst DOWN_ARROW = 40;\nconst PLUS_SIGN = 43;\nconst PRINT_SCREEN = 44;\nconst INSERT = 45;\nconst DELETE = 46;\nconst ZERO = 48;\nconst ONE = 49;\nconst TWO = 50;\nconst THREE = 51;\nconst FOUR = 52;\nconst FIVE = 53;\nconst SIX = 54;\nconst SEVEN = 55;\nconst EIGHT = 56;\nconst NINE = 57;\nconst FF_SEMICOLON = 59; // Firefox (Gecko) fires this for semicolon instead of 186\nconst FF_EQUALS = 61; // Firefox (Gecko) fires this for equals instead of 187\nconst QUESTION_MARK = 63;\nconst AT_SIGN = 64;\nconst A = 65;\nconst B = 66;\nconst C = 67;\nconst D = 68;\nconst E = 69;\nconst F = 70;\nconst G = 71;\nconst H = 72;\nconst I = 73;\nconst J = 74;\nconst K = 75;\nconst L = 76;\nconst M = 77;\nconst N = 78;\nconst O = 79;\nconst P = 80;\nconst Q = 81;\nconst R = 82;\nconst S = 83;\nconst T = 84;\nconst U = 85;\nconst V = 86;\nconst W = 87;\nconst X = 88;\nconst Y = 89;\nconst Z = 90;\nconst META = 91; // WIN_KEY_LEFT\nconst MAC_WK_CMD_LEFT = 91;\nconst MAC_WK_CMD_RIGHT = 93;\nconst CONTEXT_MENU = 93;\nconst NUMPAD_ZERO = 96;\nconst NUMPAD_ONE = 97;\nconst NUMPAD_TWO = 98;\nconst NUMPAD_THREE = 99;\nconst NUMPAD_FOUR = 100;\nconst NUMPAD_FIVE = 101;\nconst NUMPAD_SIX = 102;\nconst NUMPAD_SEVEN = 103;\nconst NUMPAD_EIGHT = 104;\nconst NUMPAD_NINE = 105;\nconst NUMPAD_MULTIPLY = 106;\nconst NUMPAD_PLUS = 107;\nconst NUMPAD_MINUS = 109;\nconst NUMPAD_PERIOD = 110;\nconst NUMPAD_DIVIDE = 111;\nconst F1 = 112;\nconst F2 = 113;\nconst F3 = 114;\nconst F4 = 115;\nconst F5 = 116;\nconst F6 = 117;\nconst F7 = 118;\nconst F8 = 119;\nconst F9 = 120;\nconst F10 = 121;\nconst F11 = 122;\nconst F12 = 123;\nconst NUM_LOCK = 144;\nconst SCROLL_LOCK = 145;\nconst FIRST_MEDIA = 166;\nconst FF_MINUS = 173;\nconst MUTE = 173; // Firefox (Gecko) fires 181 for MUTE\nconst VOLUME_DOWN = 174; // Firefox (Gecko) fires 182 for VOLUME_DOWN\nconst VOLUME_UP = 175; // Firefox (Gecko) fires 183 for VOLUME_UP\nconst FF_MUTE = 181;\nconst FF_VOLUME_DOWN = 182;\nconst LAST_MEDIA = 183;\nconst FF_VOLUME_UP = 183;\nconst SEMICOLON = 186; // Firefox (Gecko) fires 59 for SEMICOLON\nconst EQUALS = 187; // Firefox (Gecko) fires 61 for EQUALS\nconst COMMA = 188;\nconst DASH = 189; // Firefox (Gecko) fires 173 for DASH/MINUS\nconst PERIOD = 190;\nconst SLASH = 191;\nconst APOSTROPHE = 192;\nconst TILDE = 192;\nconst OPEN_SQUARE_BRACKET = 219;\nconst BACKSLASH = 220;\nconst CLOSE_SQUARE_BRACKET = 221;\nconst SINGLE_QUOTE = 222;\nconst MAC_META = 224;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Checks whether a modifier key is pressed.\n * @param event Event to be checked.\n */\nfunction hasModifierKey(event, ...modifiers) {\n    if (modifiers.length) {\n        return modifiers.some(modifier => event[modifier]);\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A, ALT, APOSTROPHE, AT_SIGN, B, BACKSLASH, BACKSPACE, C, CAPS_LOCK, CLOSE_SQUARE_BRACKET, COMMA, CONTEXT_MENU, CONTROL, D, DASH, DELETE, DOWN_ARROW, E, EIGHT, END, ENTER, EQUALS, ESCAPE, F, F1, F10, F11, F12, F2, F3, F4, F5, F6, F7, F8, F9, FF_EQUALS, FF_MINUS, FF_MUTE, FF_SEMICOLON, FF_VOLUME_DOWN, FF_VOLUME_UP, FIRST_MEDIA, FIVE, FOUR, G, H, HOME, I, INSERT, J, K, L, LAST_MEDIA, LEFT_ARROW, M, MAC_ENTER, MAC_META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, META, MUTE, N, NINE, NUMPAD_DIVIDE, NUMPAD_EIGHT, NUMPAD_FIVE, NUMPAD_FOUR, NUMPAD_MINUS, NUMPAD_MULTIPLY, NUMPAD_NINE, NUMPAD_ONE, NUMPAD_PERIOD, NUMPAD_PLUS, NUMPAD_SEVEN, NUMPAD_SIX, NUMPAD_THREE, NUMPAD_TWO, NUMPAD_ZERO, NUM_CENTER, NUM_LOCK, O, ONE, OPEN_SQUARE_BRACKET, P, PAGE_DOWN, PAGE_UP, PAUSE, PERIOD, PLUS_SIGN, PRINT_SCREEN, Q, QUESTION_MARK, R, RIGHT_ARROW, S, SCROLL_LOCK, SEMICOLON, SEVEN, SHIFT, SINGLE_QUOTE, SIX, SLASH, SPACE, T, TAB, THREE, TILDE, TWO, U, UP_ARROW, V, VOLUME_DOWN, VOLUME_UP, W, X, Y, Z, ZERO, hasModifierKey };\n","import { coerceElement, coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Output, Input, NgModule } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * @docs-private\n */\nclass MutationObserverFactory {\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n}\nMutationObserverFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MutationObserverFactory, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMutationObserverFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MutationObserverFactory, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MutationObserverFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** An injectable service that allows watching elements for changes to their content. */\nclass ContentObserver {\n    constructor(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /** Keeps track of the existing MutationObservers so they can be reused. */\n        this._observedElements = new Map();\n    }\n    ngOnDestroy() {\n        this._observedElements.forEach((_, element) => this._cleanupObserver(element));\n    }\n    observe(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        return new Observable((observer) => {\n            const stream = this._observeElement(element);\n            const subscription = stream.subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            };\n        });\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     */\n    _observeElement(element) {\n        if (!this._observedElements.has(element)) {\n            const stream = new Subject();\n            const observer = this._mutationObserverFactory.create(mutations => stream.next(mutations));\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true,\n                });\n            }\n            this._observedElements.set(element, { observer, stream, count: 1 });\n        }\n        else {\n            this._observedElements.get(element).count++;\n        }\n        return this._observedElements.get(element).stream;\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            this._observedElements.get(element).count--;\n            if (!this._observedElements.get(element).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /** Clean up the underlying MutationObserver for the specified element. */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = this._observedElements.get(element);\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n}\nContentObserver.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ContentObserver, deps: [{ token: MutationObserverFactory }], target: i0.ɵɵFactoryTarget.Injectable });\nContentObserver.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ContentObserver, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ContentObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: MutationObserverFactory }]; } });\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    constructor(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /** Event emitted for each change in the element's content. */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /** Debounce interval for emitting the changes. */\n    get debounce() {\n        return this._debounce;\n    }\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    _subscribe() {\n        this._unsubscribe();\n        const stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular(() => {\n            this._currentSubscription = (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n        });\n    }\n    _unsubscribe() {\n        this._currentSubscription?.unsubscribe();\n    }\n}\nCdkObserveContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkObserveContent, deps: [{ token: ContentObserver }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nCdkObserveContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: { disabled: [\"cdkObserveContentDisabled\", \"disabled\"], debounce: \"debounce\" }, outputs: { event: \"cdkObserveContent\" }, exportAs: [\"cdkObserveContent\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkObserveContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkObserveContent]',\n                    exportAs: 'cdkObserveContent',\n                }]\n        }], ctorParameters: function () { return [{ type: ContentObserver }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { event: [{\n                type: Output,\n                args: ['cdkObserveContent']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkObserveContentDisabled']\n            }], debounce: [{\n                type: Input\n            }] } });\nclass ObserversModule {\n}\nObserversModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ObserversModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nObserversModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ObserversModule, declarations: [CdkObserveContent], exports: [CdkObserveContent] });\nObserversModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ObserversModule, providers: [MutationObserverFactory] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ObserversModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkObserveContent],\n                    declarations: [CdkObserveContent],\n                    providers: [MutationObserverFactory],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkObserveContent, ContentObserver, MutationObserverFactory, ObserversModule };\n","import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Injectable, Inject, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = typeof Intl !== 'undefined' && Intl.v8BreakIterator;\n}\ncatch {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        // We want to use the Angular platform check because if the Document is shimmed\n        // without the navigator, the following checks will fail. This is preferred because\n        // sometimes the Document may be shimmed without the user's knowledge or intention\n        /** Whether the Angular application is being rendered in the browser. */\n        this.isBrowser = this._platformId\n            ? isPlatformBrowser(this._platformId)\n            : typeof document === 'object' && !!document;\n        /** Whether the current browser is Microsoft Edge. */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /** Whether the current rendering engine is Microsoft Trident. */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        /** Whether the current rendering engine is Blink. */\n        this.BLINK = this.isBrowser &&\n            !!(window.chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' &&\n            !this.EDGE &&\n            !this.TRIDENT;\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        /** Whether the current rendering engine is WebKit. */\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) &&\n            !this.BLINK &&\n            !this.EDGE &&\n            !this.TRIDENT;\n        /** Whether the current platform is Apple iOS. */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window);\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        /** Whether the current browser is Firefox. */\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /** Whether the current platform is Android. */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        /** Whether the current browser is Safari. */\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n}\nPlatform.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: Platform, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable });\nPlatform.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: Platform, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: Platform, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass PlatformModule {\n}\nPlatformModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: PlatformModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPlatformModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: PlatformModule });\nPlatformModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: PlatformModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: PlatformModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result Set of input types support by the current browser. */\nlet supportedInputTypes;\n/** Types of `<input>` that *might* be supported. */\nconst candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/** @returns The input types supported by this browser. */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    }));\n    return supportedInputTypes;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result of whether the user's browser supports passive event listeners. */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: () => (supportsPassiveEvents = true),\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param options Object to be normalized.\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType;\n/** Cached result of the check that indicates whether the browser supports scroll behaviors. */\nlet scrollBehaviorSupported;\n/** Check whether the browser supports scroll behaviors. */\nfunction supportsScrollBehavior() {\n    if (scrollBehaviorSupported == null) {\n        // If we're not in the browser, it can't be supported. Also check for `Element`, because\n        // some projects stub out the global `document` during SSR which can throw us off.\n        if (typeof document !== 'object' || !document || typeof Element !== 'function' || !Element) {\n            scrollBehaviorSupported = false;\n            return scrollBehaviorSupported;\n        }\n        // If the element can have a `scrollBehavior` style, we can be sure that it's supported.\n        if ('scrollBehavior' in document.documentElement.style) {\n            scrollBehaviorSupported = true;\n        }\n        else {\n            // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's\n            // supported but it doesn't handle scroll behavior, or it has been polyfilled.\n            const scrollToFunction = Element.prototype.scrollTo;\n            if (scrollToFunction) {\n                // We can detect if the function has been polyfilled by calling `toString` on it. Native\n                // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get\n                // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider\n                // polyfilled functions as supporting scroll behavior.\n                scrollBehaviorSupported = !/\\{\\s*\\[native code\\]\\s*\\}/.test(scrollToFunction.toString());\n            }\n            else {\n                scrollBehaviorSupported = false;\n            }\n        }\n    }\n    return scrollBehaviorSupported;\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return 0 /* NORMAL */;\n    }\n    if (rtlScrollAxisType == null) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        const scrollContainer = document.createElement('div');\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        const content = document.createElement('div');\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = 0 /* NORMAL */;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? 1 /* NEGATED */ : 2 /* INVERTED */;\n        }\n        scrollContainer.remove();\n    }\n    return rtlScrollAxisType;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet shadowDomIsSupported;\n/** Checks whether the user's browser support Shadow DOM. */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nfunction _getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        // Note that this should be caught by `_supportsShadowDom`, but some\n        // teams have been able to hit this code path on unsupported browsers.\n        if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n/**\n * Gets the currently-focused element on the page while\n * also piercing through Shadow DOM boundaries.\n */\nfunction _getFocusedElementPierceShadowDom() {\n    let activeElement = typeof document !== 'undefined' && document\n        ? document.activeElement\n        : null;\n    while (activeElement && activeElement.shadowRoot) {\n        const newActiveElement = activeElement.shadowRoot.activeElement;\n        if (newActiveElement === activeElement) {\n            break;\n        }\n        else {\n            activeElement = newActiveElement;\n        }\n    }\n    return activeElement;\n}\n/** Gets the target of an event while accounting for Shadow DOM. */\nfunction _getEventTarget(event) {\n    // If an event is bound outside the Shadow DOM, the `event.target` will\n    // point to the shadow root so we have to use `composedPath` instead.\n    return (event.composedPath ? event.composedPath()[0] : event.target);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Gets whether the code is currently running in a test environment. */\nfunction _isTestEnvironment() {\n    // We can't use `declare const` because it causes conflicts inside Google with the real typings\n    // for these symbols and we can't read them off the global object, because they don't appear to\n    // be attached there for some runners like Jest.\n    // (see: https://github.com/angular/components/issues/23365#issuecomment-938146643)\n    return (\n    // @ts-ignore\n    (typeof __karma__ !== 'undefined' && !!__karma__) ||\n        // @ts-ignore\n        (typeof jasmine !== 'undefined' && !!jasmine) ||\n        // @ts-ignore\n        (typeof jest !== 'undefined' && !!jest) ||\n        // @ts-ignore\n        (typeof Mocha !== 'undefined' && !!Mocha));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Platform, PlatformModule, _getEventTarget, _getFocusedElementPierceShadowDom, _getShadowRoot, _isTestEnvironment, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior };\n","import * as i0 from '@angular/core';\nimport { Version, InjectionToken, NgModule, Optional, Inject, inject, LOCALE_ID, Injectable, Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, Output } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$1 } from '@angular/cdk';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { _isTestEnvironment, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of Angular Material. */\nconst VERSION = new Version('13.3.9');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nclass AnimationCurves {\n}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/** @docs-private */\nclass AnimationDurations {\n}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/** Injection token that configures whether the Material sanity checks are enabled. */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    constructor(highContrastModeDetector, _sanityChecks, _document) {\n        this._sanityChecks = _sanityChecks;\n        this._document = _document;\n        /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n        this._hasDoneGlobalChecks = false;\n        // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n        // in MatCommonModule.\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n        if (!this._hasDoneGlobalChecks) {\n            this._hasDoneGlobalChecks = true;\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (this._checkIsEnabled('doctype')) {\n                    _checkDoctypeIsDefined(this._document);\n                }\n                if (this._checkIsEnabled('theme')) {\n                    _checkThemeIsPresent(this._document);\n                }\n                if (this._checkIsEnabled('version')) {\n                    _checkCdkVersionMatch();\n                }\n            }\n        }\n    }\n    /** Gets whether a specific sanity check is enabled. */\n    _checkIsEnabled(name) {\n        if (_isTestEnvironment()) {\n            return false;\n        }\n        if (typeof this._sanityChecks === 'boolean') {\n            return this._sanityChecks;\n        }\n        return !!this._sanityChecks[name];\n    }\n}\nMatCommonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCommonModule, deps: [{ token: i1.HighContrastModeDetector }, { token: MATERIAL_SANITY_CHECKS, optional: true }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.NgModule });\nMatCommonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCommonModule, imports: [BidiModule], exports: [BidiModule] });\nMatCommonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCommonModule, imports: [[BidiModule], BidiModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCommonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule],\n                    exports: [BidiModule],\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HighContrastModeDetector }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MATERIAL_SANITY_CHECKS]\n                }] }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/** Checks that the page has a doctype. */\nfunction _checkDoctypeIsDefined(doc) {\n    if (!doc.doctype) {\n        console.warn('Current document does not have a doctype. This may cause ' +\n            'some Angular Material components not to behave as expected.');\n    }\n}\n/** Checks that a theme has been included. */\nfunction _checkThemeIsPresent(doc) {\n    // We need to assert that the `body` is defined, because these checks run very early\n    // and the `body` won't be defined if the consumer put their scripts in the `head`.\n    if (!doc.body || typeof getComputedStyle !== 'function') {\n        return;\n    }\n    const testElement = doc.createElement('div');\n    testElement.classList.add('mat-theme-loaded-marker');\n    doc.body.appendChild(testElement);\n    const computedStyle = getComputedStyle(testElement);\n    // In some situations the computed style of the test element can be null. For example in\n    // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n    if (computedStyle && computedStyle.display !== 'none') {\n        console.warn('Could not find Angular Material core theme. Most Material ' +\n            'components may not work as expected. For more info refer ' +\n            'to the theming guide: https://material.angular.io/guide/theming');\n    }\n    testElement.remove();\n}\n/** Checks whether the Material version matches the CDK version. */\nfunction _checkCdkVersionMatch() {\n    if (VERSION.full !== VERSION$1.full) {\n        console.warn('The Angular Material version (' +\n            VERSION.full +\n            ') does not match ' +\n            'the Angular CDK version (' +\n            VERSION$1.full +\n            ').\\n' +\n            'Please ensure the versions of these two packages exactly match.');\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinDisabled(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n        get disabled() {\n            return this._disabled;\n        }\n        set disabled(value) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this.defaultColor = defaultColor;\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n        get color() {\n            return this._color;\n        }\n        set color(value) {\n            const colorPalette = value || this.defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinDisableRipple(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n        /** Whether the ripple effect is disabled or not. */\n        get disableRipple() {\n            return this._disableRipple;\n        }\n        set disableRipple(value) {\n            this._disableRipple = coerceBooleanProperty(value);\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n            this.defaultTabIndex = defaultTabIndex;\n        }\n        get tabIndex() {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinErrorState(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            // This class member exists as an interop with `MatFormFieldControl` which expects\n            // a public `stateChanges` observable to emit whenever the form field should be updated.\n            // The description is not specifically mentioning the error state, as classes using this\n            // mixin can/should emit an event in other cases too.\n            /** Emits whenever the component state changes. */\n            this.stateChanges = new Subject();\n            /** Whether the component is in an error state. */\n            this.errorState = false;\n        }\n        /** Updates the error state based on the provided error state matcher. */\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control : null;\n            const newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\nfunction mixinInitialized(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            /** Whether this directive has been marked as initialized. */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable(subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    this._pendingSubscribers.push(subscriber);\n                }\n            });\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * @docs-private\n         */\n        _markInitialized() {\n            if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true;\n            this._pendingSubscribers.forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /** Emits and completes the subscriber stream (should only emit once). */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** InjectionToken for datepicker that can be used to override default locale code. */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/** @docs-private */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n        /** A stream that emits when the locale changes. */\n        this.localeChanges = this._localeChanges;\n    }\n    /**\n     * Given a potential date object, returns that same date object if it is\n     * a valid date, or `null` if it's not a valid date.\n     * @param obj The object to check.\n     * @returns A date or `null`.\n     */\n    getValidDateOrNull(obj) {\n        return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n    }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param value The value to be deserialized into a date object.\n     * @returns The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || (this.isDateInstance(value) && this.isValid(value))) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param locale The new locale.\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param first The first date to compare.\n     * @param second The second date to compare.\n     * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return (this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second));\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param first The first date to check.\n     * @param second The second date to check.\n     * @returns Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            let firstValid = this.isValid(first);\n            let secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param date The date to clamp.\n     * @param min The minimum value to allow. If null or omitted no min is enforced.\n     * @param max The maximum value to allow. If null or omitted no max is enforced.\n     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\nclass NativeDateAdapter extends DateAdapter {\n    constructor(matDateLocale, \n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 14.0.0\n     */\n    _platform) {\n        super();\n        /**\n         * @deprecated No longer being used. To be removed.\n         * @breaking-change 14.0.0\n         */\n        this.useUtcForDisplay = false;\n        super.setLocale(matDateLocale);\n    }\n    getYear(date) {\n        return date.getFullYear();\n    }\n    getMonth(date) {\n        return date.getMonth();\n    }\n    getDate(date) {\n        return date.getDate();\n    }\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    getMonthNames(style) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n        return range(12, i => this._format(dtf, new Date(2017, i, 1)));\n    }\n    getDateNames() {\n        const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n        return range(31, i => this._format(dtf, new Date(2017, 0, i + 1)));\n    }\n    getDayOfWeekNames(style) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n        return range(7, i => this._format(dtf, new Date(2017, 0, i + 1)));\n    }\n    getYearName(date) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n        return this._format(dtf, date);\n    }\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    clone(date) {\n        return new Date(date.getTime());\n    }\n    createDate(year, month, date) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            // Check for invalid month and date (except upper bound on date which we have to check after\n            // creating the Date).\n            if (month < 0 || month > 11) {\n                throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n            }\n            if (date < 1) {\n                throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n            }\n        }\n        let result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    today() {\n        return new Date();\n    }\n    parse(value) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        const dtf = new Intl.DateTimeFormat(this.locale, { ...displayFormat, timeZone: 'utc' });\n        return this._format(dtf, date);\n    }\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    addCalendarMonths(date, months) {\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != (((this.getMonth(date) + months) % 12) + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate()),\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                let date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    invalid() {\n        return new Date(NaN);\n    }\n    /** Creates a date but allows the month and date to overflow. */\n    _createDateWithOverflow(year, month, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setFullYear` and `setHours` instead.\n        const d = new Date();\n        d.setFullYear(year, month, date);\n        d.setHours(0, 0, 0, 0);\n        return d;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @param n The number to pad.\n     * @returns The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param date Date from which we want to get the string representation according to dtf\n     * @returns A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n        const d = new Date();\n        d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n        d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n        return dtf.format(d);\n    }\n}\nNativeDateAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NativeDateAdapter, deps: [{ token: MAT_DATE_LOCALE, optional: true }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nNativeDateAdapter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NativeDateAdapter });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NativeDateAdapter, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_LOCALE]\n                }] }, { type: i1$1.Platform }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    },\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass NativeDateModule {\n}\nNativeDateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NativeDateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNativeDateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NativeDateModule });\nNativeDateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NativeDateModule, providers: [{ provide: DateAdapter, useClass: NativeDateAdapter }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NativeDateModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [{ provide: DateAdapter, useClass: NativeDateAdapter }],\n                }]\n        }] });\nclass MatNativeDateModule {\n}\nMatNativeDateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatNativeDateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatNativeDateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatNativeDateModule, imports: [NativeDateModule] });\nMatNativeDateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatNativeDateModule, providers: [{ provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS }], imports: [[NativeDateModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatNativeDateModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NativeDateModule],\n                    providers: [{ provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Error state matcher that matches when a control is invalid and dirty. */\nclass ShowOnDirtyErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\nShowOnDirtyErrorStateMatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nShowOnDirtyErrorStateMatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, decorators: [{\n            type: Injectable\n        }] });\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nclass ErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nErrorStateMatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ErrorStateMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nErrorStateMatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ErrorStateMatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ErrorStateMatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n}\nMatLine.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatLine, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatLine.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatLine, selector: \"[mat-line], [matLine]\", host: { classAttribute: \"mat-line\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatLine, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-line], [matLine]',\n                    host: { 'class': 'mat-line' },\n                }]\n        }] });\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nfunction setLines(lines, element, prefix = 'mat') {\n    // Note: doesn't need to unsubscribe, because `changes`\n    // gets completed by Angular when the view is destroyed.\n    lines.changes.pipe(startWith(lines)).subscribe(({ length }) => {\n        setClass(element, `${prefix}-2-line`, false);\n        setClass(element, `${prefix}-3-line`, false);\n        setClass(element, `${prefix}-multi-line`, false);\n        if (length === 2 || length === 3) {\n            setClass(element, `${prefix}-${length}-line`, true);\n        }\n        else if (length > 3) {\n            setClass(element, `${prefix}-multi-line`, true);\n        }\n    });\n}\n/** Adds or removes a class from an element. */\nfunction setClass(element, className, isAdd) {\n    element.nativeElement.classList.toggle(className, isAdd);\n}\nclass MatLineModule {\n}\nMatLineModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatLineModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatLineModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatLineModule, declarations: [MatLine], imports: [MatCommonModule], exports: [MatLine, MatCommonModule] });\nMatLineModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatLineModule, imports: [[MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatLineModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatLine, MatCommonModule],\n                    declarations: [MatLine],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    constructor(_renderer, \n    /** Reference to the ripple HTML element. */\n    element, \n    /** Ripple configuration used for the ripple. */\n    config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        /** Current state of the ripple. */\n        this.state = 3 /* HIDDEN */;\n    }\n    /** Fades out the ripple element. */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\n\n// TODO: import these values from `@material/ripple` eventually.\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 225,\n    exitDuration: 150,\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n/** Options that apply to all the event listeners that are bound by the ripple renderer. */\nconst passiveEventOptions = normalizePassiveListenerOptions({ passive: true });\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nclass RippleRenderer {\n    constructor(_target, _ngZone, elementOrElementRef, platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        /** Whether the pointer is currently down or not. */\n        this._isPointerDown = false;\n        /** Set of currently active ripple references. */\n        this._activeRipples = new Set();\n        /** Whether pointer-up event listeners have been registered. */\n        this._pointerUpEventsRegistered = false;\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param config Extra ripple options.\n     */\n    fadeInRipple(x, y, config = {}) {\n        const containerRect = (this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect());\n        const animationConfig = { ...defaultRippleAnimationConfig, ...config.animation };\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        const offsetX = x - containerRect.left;\n        const offsetY = y - containerRect.top;\n        const duration = animationConfig.enterDuration;\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If a custom color has been specified, set it as inline style. If no color is\n        // set, the default color will be applied through the ripple theme styles.\n        if (config.color != null) {\n            ripple.style.backgroundColor = config.color;\n        }\n        ripple.style.transitionDuration = `${duration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        // Exposed reference to the ripple that will be returned.\n        const rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = 0 /* FADING_IN */;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this._runTimeoutOutsideZone(() => {\n            const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n            rippleRef.state = 1 /* VISIBLE */;\n            // When the timer runs out while the user has kept their pointer down, we want to\n            // keep only the persistent ripples and the latest transient ripple. We do this,\n            // because we don't want stacked transient ripples to appear after their enter\n            // animation has finished.\n            if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n                rippleRef.fadeOut();\n            }\n        }, duration);\n        return rippleRef;\n    }\n    /** Fades out a ripple reference. */\n    fadeOutRipple(rippleRef) {\n        const wasActive = this._activeRipples.delete(rippleRef);\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // For ripples that are not active anymore, don't re-run the fade-out animation.\n        if (!wasActive) {\n            return;\n        }\n        const rippleEl = rippleRef.element;\n        const animationConfig = { ...defaultRippleAnimationConfig, ...rippleRef.config.animation };\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = 2 /* FADING_OUT */;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this._runTimeoutOutsideZone(() => {\n            rippleRef.state = 3 /* HIDDEN */;\n            rippleEl.remove();\n        }, animationConfig.exitDuration);\n    }\n    /** Fades out all currently active ripples. */\n    fadeOutAll() {\n        this._activeRipples.forEach(ripple => ripple.fadeOut());\n    }\n    /** Fades out all currently active non-persistent ripples. */\n    fadeOutAllNonPersistent() {\n        this._activeRipples.forEach(ripple => {\n            if (!ripple.config.persistent) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Sets up the trigger event listeners */\n    setupTriggerEvents(elementOrElementRef) {\n        const element = coerceElement(elementOrElementRef);\n        if (!element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._triggerElement = element;\n        this._registerEvents(pointerDownEvents);\n    }\n    /**\n     * Handles all registered events.\n     * @docs-private\n     */\n    handleEvent(event) {\n        if (event.type === 'mousedown') {\n            this._onMousedown(event);\n        }\n        else if (event.type === 'touchstart') {\n            this._onTouchStart(event);\n        }\n        else {\n            this._onPointerUp();\n        }\n        // If pointer-up events haven't been registered yet, do so now.\n        // We do this on-demand in order to reduce the total number of event listeners\n        // registered by the ripples, which speeds up the rendering time for large UIs.\n        if (!this._pointerUpEventsRegistered) {\n            this._registerEvents(pointerUpEvents);\n            this._pointerUpEventsRegistered = true;\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using mouse. */\n    _onMousedown(event) {\n        // Screen readers will fire fake mouse events for space/enter. Skip launching a\n        // ripple in this case for consistency with the non-screen-reader experience.\n        const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n        const isSyntheticEvent = this._lastTouchStartEvent &&\n            Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n        if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n            this._isPointerDown = true;\n            this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using touch. */\n    _onTouchStart(event) {\n        if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n            // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n            // events will launch a second ripple if we don't ignore mouse events for a specific\n            // time after a touchstart event.\n            this._lastTouchStartEvent = Date.now();\n            this._isPointerDown = true;\n            // Use `changedTouches` so we skip any touches where the user put\n            // their finger down, but used another finger to tap the element again.\n            const touches = event.changedTouches;\n            for (let i = 0; i < touches.length; i++) {\n                this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n            }\n        }\n    }\n    /** Function being called whenever the trigger is being released. */\n    _onPointerUp() {\n        if (!this._isPointerDown) {\n            return;\n        }\n        this._isPointerDown = false;\n        // Fade-out all ripples that are visible and not persistent.\n        this._activeRipples.forEach(ripple => {\n            // By default, only ripples that are completely visible will fade out on pointer release.\n            // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n            const isVisible = ripple.state === 1 /* VISIBLE */ ||\n                (ripple.config.terminateOnPointerUp && ripple.state === 0 /* FADING_IN */);\n            if (!ripple.config.persistent && isVisible) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\n    _runTimeoutOutsideZone(fn, delay = 0) {\n        this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n    }\n    /** Registers event listeners for a given list of events. */\n    _registerEvents(eventTypes) {\n        this._ngZone.runOutsideAngular(() => {\n            eventTypes.forEach(type => {\n                this._triggerElement.addEventListener(type, this, passiveEventOptions);\n            });\n        });\n    }\n    /** Removes previously registered event listeners from the trigger element. */\n    _removeTriggerEvents() {\n        if (this._triggerElement) {\n            pointerDownEvents.forEach(type => {\n                this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n            });\n            if (this._pointerUpEventsRegistered) {\n                pointerUpEvents.forEach(type => {\n                    this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n                });\n            }\n        }\n    }\n}\n/** Enforces a style recalculation of a DOM element by computing its styles. */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to specify the global ripple options. */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n        this._elementRef = _elementRef;\n        this._animationMode = _animationMode;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        this._disabled = false;\n        /** Whether ripple directive is initialized and the input bindings are set. */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n    }\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        if (value) {\n            this.fadeOutAllNonPersistent();\n        }\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     */\n    get trigger() {\n        return this._trigger || this._elementRef.nativeElement;\n    }\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /** Fades out all currently showing ripple elements. */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /** Fades out all currently showing non-persistent ripple elements. */\n    fadeOutAllNonPersistent() {\n        this._rippleRenderer.fadeOutAllNonPersistent();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: {\n                ...this._globalOptions.animation,\n                ...(this._animationMode === 'NoopAnimations' ? { enterDuration: 0, exitDuration: 0 } : {}),\n                ...this.animation,\n            },\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /** Sets up the trigger event listeners if ripples are enabled. */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, { ...this.rippleConfig, ...config });\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, { ...this.rippleConfig, ...configOrX });\n        }\n    }\n}\nMatRipple.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRipple, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i1$1.Platform }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatRipple.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: { color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], radius: [\"matRippleRadius\", \"radius\"], animation: [\"matRippleAnimation\", \"animation\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"] }, host: { properties: { \"class.mat-ripple-unbounded\": \"unbounded\" }, classAttribute: \"mat-ripple\" }, exportAs: [\"matRipple\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRipple, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-ripple], [matRipple]',\n                    exportAs: 'matRipple',\n                    host: {\n                        'class': 'mat-ripple',\n                        '[class.mat-ripple-unbounded]': 'unbounded',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i1$1.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { color: [{\n                type: Input,\n                args: ['matRippleColor']\n            }], unbounded: [{\n                type: Input,\n                args: ['matRippleUnbounded']\n            }], centered: [{\n                type: Input,\n                args: ['matRippleCentered']\n            }], radius: [{\n                type: Input,\n                args: ['matRippleRadius']\n            }], animation: [{\n                type: Input,\n                args: ['matRippleAnimation']\n            }], disabled: [{\n                type: Input,\n                args: ['matRippleDisabled']\n            }], trigger: [{\n                type: Input,\n                args: ['matRippleTrigger']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRippleModule {\n}\nMatRippleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRippleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatRippleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRippleModule, declarations: [MatRipple], imports: [MatCommonModule], exports: [MatRipple, MatCommonModule] });\nMatRippleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRippleModule, imports: [[MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRippleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatRipple, MatCommonModule],\n                    declarations: [MatRipple],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\nclass MatPseudoCheckbox {\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /** Display state of the checkbox. */\n        this.state = 'unchecked';\n        /** Whether the checkbox is disabled. */\n        this.disabled = false;\n    }\n}\nMatPseudoCheckbox.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPseudoCheckbox, deps: [{ token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatPseudoCheckbox.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatPseudoCheckbox, selector: \"mat-pseudo-checkbox\", inputs: { state: \"state\", disabled: \"disabled\" }, host: { properties: { \"class.mat-pseudo-checkbox-indeterminate\": \"state === \\\"indeterminate\\\"\", \"class.mat-pseudo-checkbox-checked\": \"state === \\\"checked\\\"\", \"class.mat-pseudo-checkbox-disabled\": \"disabled\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\" }, classAttribute: \"mat-pseudo-checkbox\" }, ngImport: i0, template: '', isInline: true, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPseudoCheckbox, decorators: [{\n            type: Component,\n            args: [{ encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, selector: 'mat-pseudo-checkbox', template: '', host: {\n                        'class': 'mat-pseudo-checkbox',\n                        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    }, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { state: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPseudoCheckboxModule {\n}\nMatPseudoCheckboxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPseudoCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatPseudoCheckboxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPseudoCheckboxModule, declarations: [MatPseudoCheckbox], imports: [MatCommonModule], exports: [MatPseudoCheckbox] });\nMatPseudoCheckboxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPseudoCheckboxModule, imports: [[MatCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPseudoCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatPseudoCheckbox],\n                    declarations: [MatPseudoCheckbox],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent component to options.\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n// Boilerplate for applying mixins to MatOptgroup.\n/** @docs-private */\nconst _MatOptgroupMixinBase = mixinDisabled(class {\n});\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\nclass _MatOptgroupBase extends _MatOptgroupMixinBase {\n    constructor(parent) {\n        super();\n        /** Unique id for the underlying label. */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n        this._inert = parent?.inertGroups ?? false;\n    }\n}\n_MatOptgroupBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatOptgroupBase, deps: [{ token: MAT_OPTION_PARENT_COMPONENT, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatOptgroupBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatOptgroupBase, inputs: { label: \"label\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatOptgroupBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_OPTION_PARENT_COMPONENT]\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { label: [{\n                type: Input\n            }] } });\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupBase {\n}\nMatOptgroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatOptgroup, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatOptgroup.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatOptgroup, selector: \"mat-optgroup\", inputs: { disabled: \"disabled\" }, host: { properties: { \"attr.role\": \"_inert ? null : \\\"group\\\"\", \"attr.aria-disabled\": \"_inert ? null : disabled.toString()\", \"attr.aria-labelledby\": \"_inert ? null : _labelId\", \"class.mat-optgroup-disabled\": \"disabled\" }, classAttribute: \"mat-optgroup\" }, providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }], exportAs: [\"matOptgroup\"], usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-optgroup-label\\\" aria-hidden=\\\"true\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></span>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\", styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatOptgroup, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-optgroup', exportAs: 'matOptgroup', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled'], host: {\n                        'class': 'mat-optgroup',\n                        '[attr.role]': '_inert ? null : \"group\"',\n                        '[attr.aria-disabled]': '_inert ? null : disabled.toString()',\n                        '[attr.aria-labelledby]': '_inert ? null : _labelId',\n                        '[class.mat-optgroup-disabled]': 'disabled',\n                    }, providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }], template: \"<span class=\\\"mat-optgroup-label\\\" aria-hidden=\\\"true\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></span>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\", styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"] }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n/** Event object emitted by MatOption when selected or deselected. */\nclass MatOptionSelectionChange {\n    constructor(\n    /** Reference to the option that emitted the event. */\n    source, \n    /** Whether the change in the option's value was a result of a user action. */\n    isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\nclass _MatOptionBase {\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /** The unique ID of the option. */\n        this.id = `mat-option-${_uniqueIdCounter++}`;\n        /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /** Emits when the state of the option changes and any parents have to be notified. */\n        this._stateChanges = new Subject();\n    }\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n    /** Whether or not the option is currently selected. */\n    get selected() {\n        return this._selected;\n    }\n    /** Whether the option is disabled. */\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return !!(this._parent && this._parent.disableRipple);\n    }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n    /** Selects the option. */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /** Deselects the option. */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /** Sets focus onto this option. */\n    focus(_origin, options) {\n        // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n        // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus(options);\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        return this.viewValue;\n    }\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\n     * information.\n     */\n    _getAriaSelected() {\n        return this.selected || (this.multiple ? false : null);\n    }\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Gets the host DOM element. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /** Emits the selection change event. */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n}\n_MatOptionBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatOptionBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatOptionBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatOptionBase, inputs: { value: \"value\", id: \"id\", disabled: \"disabled\" }, outputs: { onSelectionChange: \"onSelectionChange\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatOptionBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined }, { type: _MatOptgroupBase }]; }, propDecorators: { value: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], onSelectionChange: [{\n                type: Output\n            }] } });\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption extends _MatOptionBase {\n    constructor(element, changeDetectorRef, parent, group) {\n        super(element, changeDetectorRef, parent, group);\n    }\n}\nMatOption.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatOption, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_OPTION_PARENT_COMPONENT, optional: true }, { token: MAT_OPTGROUP, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatOption.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatOption, selector: \"mat-option\", host: { attributes: { \"role\": \"option\" }, listeners: { \"click\": \"_selectViaInteraction()\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.tabindex\": \"_getTabIndex()\", \"class.mat-selected\": \"selected\", \"class.mat-option-multiple\": \"multiple\", \"class.mat-active\": \"active\", \"id\": \"id\", \"attr.aria-selected\": \"_getAriaSelected()\", \"attr.aria-disabled\": \"disabled.toString()\", \"class.mat-option-disabled\": \"disabled\" }, classAttribute: \"mat-option mat-focus-indicator\" }, exportAs: [\"matOption\"], usesInheritance: true, ngImport: i0, template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\", styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"], components: [{ type: MatPseudoCheckbox, selector: \"mat-pseudo-checkbox\", inputs: [\"state\", \"disabled\"] }], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatOption, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-option', exportAs: 'matOption', host: {\n                        'role': 'option',\n                        '[attr.tabindex]': '_getTabIndex()',\n                        '[class.mat-selected]': 'selected',\n                        '[class.mat-option-multiple]': 'multiple',\n                        '[class.mat-active]': 'active',\n                        '[id]': 'id',\n                        '[attr.aria-selected]': '_getAriaSelected()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[class.mat-option-disabled]': 'disabled',\n                        '(click)': '_selectViaInteraction()',\n                        '(keydown)': '_handleKeydown($event)',\n                        'class': 'mat-option mat-focus-indicator',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\", styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_OPTION_PARENT_COMPONENT]\n                }] }, { type: MatOptgroup, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_OPTGROUP]\n                }] }]; } });\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        let optionsArray = options.toArray();\n        let groups = optionGroups.toArray();\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatOptionModule {\n}\nMatOptionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatOptionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatOptionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatOptionModule, declarations: [MatOption, MatOptgroup], imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule], exports: [MatOption, MatOptgroup] });\nMatOptionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatOptionModule, imports: [[MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatOptionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule],\n                    exports: [MatOption, MatOptgroup],\n                    declarations: [MatOption, MatOptgroup],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationCurves, AnimationDurations, DateAdapter, ErrorStateMatcher, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatLine, MatLineModule, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NativeDateAdapter, NativeDateModule, RippleRef, RippleRenderer, ShowOnDirtyErrorStateMatcher, VERSION, _MatOptgroupBase, _MatOptionBase, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines };\n","import * as i0 from '@angular/core';\nimport { SecurityContext, Injectable, Optional, Inject, SkipSelf, ErrorHandler, InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DOCUMENT } from '@angular/common';\nimport { of, throwError, forkJoin, Subscription } from 'rxjs';\nimport { tap, map, catchError, finalize, share, take } from 'rxjs/operators';\nimport * as i1 from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\nimport * as i2 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Trusted Types policy, or null if Trusted Types are not\n * enabled/supported, or undefined if the policy has not been created yet.\n */\nlet policy;\n/**\n * Returns the Trusted Types policy, or null if Trusted Types are not\n * enabled/supported. The first call to this function will create the policy.\n */\nfunction getPolicy() {\n    if (policy === undefined) {\n        policy = null;\n        if (typeof window !== 'undefined') {\n            const ttWindow = window;\n            if (ttWindow.trustedTypes !== undefined) {\n                policy = ttWindow.trustedTypes.createPolicy('angular#components', {\n                    createHTML: (s) => s,\n                });\n            }\n        }\n    }\n    return policy;\n}\n/**\n * Unsafely promote a string to a TrustedHTML, falling back to strings when\n * Trusted Types are not available.\n * @security This is a security-sensitive function; any use of this function\n * must go through security review. In particular, it must be assured that the\n * provided string will never cause an XSS vulnerability if used in a context\n * that will be interpreted as HTML by a browser, e.g. when assigning to\n * element.innerHTML.\n */\nfunction trustedHTMLFromString(html) {\n    return getPolicy()?.createHTML(html) || html;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * @docs-private\n */\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including @angular/common/http.\n * @docs-private\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * @param url URL that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * @param literal HTML that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n        `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * @docs-private\n */\nclass SvgIconConfig {\n    constructor(url, svgText, options) {\n        this.url = url;\n        this.svgText = svgText;\n        this.options = options;\n    }\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nclass MatIconRegistry {\n    constructor(_httpClient, _sanitizer, document, _errorHandler) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        this._errorHandler = _errorHandler;\n        /**\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n         */\n        this._svgIconConfigs = new Map();\n        /**\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n         * Multiple icon sets can be registered under the same namespace.\n         */\n        this._iconSetConfigs = new Map();\n        /** Cache for icons loaded by direct URLs. */\n        this._cachedIconsByUrl = new Map();\n        /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */\n        this._inProgressUrlFetches = new Map();\n        /** Map from font identifiers to their CSS class names. Used for icon fonts. */\n        this._fontCssClassesByAlias = new Map();\n        /** Registered icon resolver functions. */\n        this._resolvers = [];\n        /**\n         * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n         * The default 'material-icons' value assumes that the material icon font has been loaded as\n         * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n         */\n        this._defaultFontSetClass = 'material-icons';\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIcon(iconName, url, options) {\n        return this.addSvgIconInNamespace('', iconName, url, options);\n    }\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteral(iconName, literal, options) {\n        return this.addSvgIconLiteralInNamespace('', iconName, literal, options);\n    }\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIconInNamespace(namespace, iconName, url, options) {\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon resolver function with the registry. The function will be invoked with the\n     * name and namespace of an icon when the registry tries to resolve the URL from which to fetch\n     * the icon. The resolver is expected to return a `SafeResourceUrl` that points to the icon,\n     * an object with the icon URL and icon options, or `null` if the icon is not supported. Resolvers\n     * will be invoked in the order in which they have been registered.\n     * @param resolver Resolver function to be registered.\n     */\n    addSvgIconResolver(resolver) {\n        this._resolvers.push(resolver);\n        return this;\n    }\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        // TODO: add an ngDevMode check\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        // Security: The literal is passed in as SafeHtml, and is thus trusted.\n        const trustedLiteral = trustedHTMLFromString(cleanLiteral);\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig('', trustedLiteral, options));\n    }\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @param url\n     */\n    addSvgIconSet(url, options) {\n        return this.addSvgIconSetInNamespace('', url, options);\n    }\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteral(literal, options) {\n        return this.addSvgIconSetLiteralInNamespace('', literal, options);\n    }\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param url\n     */\n    addSvgIconSetInNamespace(namespace, url, options) {\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        // Security: The literal is passed in as SafeHtml, and is thus trusted.\n        const trustedLiteral = trustedHTMLFromString(cleanLiteral);\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig('', trustedLiteral, options));\n    }\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @param alias Alias for the font.\n     * @param className Class name override to be used instead of the alias.\n     */\n    registerFontClassAlias(alias, className = alias) {\n        this._fontCssClassesByAlias.set(alias, className);\n        return this;\n    }\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     */\n    classNameForFontAlias(alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    }\n    /**\n     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @param className\n     */\n    setDefaultFontSetClass(className) {\n        this._defaultFontSetClass = className;\n        return this;\n    }\n    /**\n     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    getDefaultFontSetClass() {\n        return this._defaultFontSetClass;\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param safeUrl URL from which to fetch the SVG icon.\n     */\n    getSvgIconFromUrl(safeUrl) {\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        const cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl, null)).pipe(tap(svg => this._cachedIconsByUrl.set(url, svg)), map(svg => cloneSvg(svg)));\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param name Name of the icon to be retrieved.\n     * @param namespace Namespace in which to look for the icon.\n     */\n    getNamedSvgIcon(name, namespace = '') {\n        const key = iconKey(namespace, name);\n        let config = this._svgIconConfigs.get(key);\n        // Return (copy of) cached icon if possible.\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // Otherwise try to resolve the config from one of the resolver functions.\n        config = this._getIconConfigFromResolvers(namespace, name);\n        if (config) {\n            this._svgIconConfigs.set(key, config);\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        const iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    }\n    ngOnDestroy() {\n        this._resolvers = [];\n        this._svgIconConfigs.clear();\n        this._iconSetConfigs.clear();\n        this._cachedIconsByUrl.clear();\n    }\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     */\n    _getSvgFromConfig(config) {\n        if (config.svgText) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(this._svgElementFromConfig(config)));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(map(svg => cloneSvg(svg)));\n        }\n    }\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     */\n    _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        const iconSetFetchRequests = iconSetConfigs\n            .filter(iconSetConfig => !iconSetConfig.svgText)\n            .map(iconSetConfig => {\n            return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError((err) => {\n                const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n                return of(null);\n            }));\n        });\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map(() => {\n            const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            // TODO: add an ngDevMode check\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        }));\n    }\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n            const config = iconSetConfigs[i];\n            // Parsing the icon set's text into an SVG element can be expensive. We can avoid some of\n            // the parsing by doing a quick check using `indexOf` to see if there's any chance for the\n            // icon to be in the set. This won't be 100% accurate, but it should help us avoid at least\n            // some of the parsing.\n            if (config.svgText && config.svgText.toString().indexOf(iconName) > -1) {\n                const svg = this._svgElementFromConfig(config);\n                const foundIcon = this._extractSvgIconFromSet(svg, iconName, config.options);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     */\n    _loadSvgIconFromConfig(config) {\n        return this._fetchIcon(config).pipe(tap(svgText => (config.svgText = svgText)), map(() => this._svgElementFromConfig(config)));\n    }\n    /**\n     * Loads the content of the icon set URL specified in the\n     * SvgIconConfig and attaches it to the config.\n     */\n    _loadSvgIconSetFromConfig(config) {\n        if (config.svgText) {\n            return of(null);\n        }\n        return this._fetchIcon(config).pipe(tap(svgText => (config.svgText = svgText)));\n    }\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractSvgIconFromSet(iconSet, iconName, options) {\n        // Use the `id=\"iconName\"` syntax in order to escape special\n        // characters in the ID (versus using the #iconName syntax).\n        const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        const iconElement = iconSource.cloneNode(true);\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes(iconElement, options);\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg, options);\n    }\n    /**\n     * Creates a DOM element from the given SVG string.\n     */\n    _svgElementFromString(str) {\n        const div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        const svg = div.querySelector('svg');\n        // TODO: add an ngDevMode check\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    }\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     */\n    _toSvgElement(element) {\n        const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\n        const attributes = element.attributes;\n        // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n        for (let i = 0; i < attributes.length; i++) {\n            const { name, value } = attributes[i];\n            if (name !== 'id') {\n                svg.setAttribute(name, value);\n            }\n        }\n        for (let i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    }\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     */\n    _setSvgAttributes(svg, options) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        if (options && options.viewBox) {\n            svg.setAttribute('viewBox', options.viewBox);\n        }\n        return svg;\n    }\n    /**\n     * Returns an Observable which produces the string contents of the given icon. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     */\n    _fetchIcon(iconConfig) {\n        const { url: safeUrl, options } = iconConfig;\n        const withCredentials = options?.withCredentials ?? false;\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        // TODO: add an ngDevMode check\n        if (safeUrl == null) {\n            throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n        }\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        // TODO: add an ngDevMode check\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        const inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        const req = this._httpClient.get(url, { responseType: 'text', withCredentials }).pipe(map(svg => {\n            // Security: This SVG is fetched from a SafeResourceUrl, and is thus\n            // trusted HTML.\n            return trustedHTMLFromString(svg);\n        }), finalize(() => this._inProgressUrlFetches.delete(url)), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    }\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param iconName Name under which to register the config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconConfig(namespace, iconName, config) {\n        this._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return this;\n    }\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconSetConfig(namespace, config) {\n        const configNamespace = this._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            this._iconSetConfigs.set(namespace, [config]);\n        }\n        return this;\n    }\n    /** Parses a config's text into an SVG element. */\n    _svgElementFromConfig(config) {\n        if (!config.svgElement) {\n            const svg = this._svgElementFromString(config.svgText);\n            this._setSvgAttributes(svg, config.options);\n            config.svgElement = svg;\n        }\n        return config.svgElement;\n    }\n    /** Tries to create an icon config through the registered resolver functions. */\n    _getIconConfigFromResolvers(namespace, name) {\n        for (let i = 0; i < this._resolvers.length; i++) {\n            const result = this._resolvers[i](name, namespace);\n            if (result) {\n                return isSafeUrlWithOptions(result)\n                    ? new SvgIconConfig(result.url, null, result.options)\n                    : new SvgIconConfig(result, null);\n            }\n        }\n        return undefined;\n    }\n}\nMatIconRegistry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatIconRegistry, deps: [{ token: i1.HttpClient, optional: true }, { token: i2.DomSanitizer }, { token: DOCUMENT, optional: true }, { token: i0.ErrorHandler }], target: i0.ɵɵFactoryTarget.Injectable });\nMatIconRegistry.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatIconRegistry, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatIconRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient, decorators: [{\n                    type: Optional\n                }] }, { type: i2.DomSanitizer }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.ErrorHandler }]; } });\n/** @docs-private */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, errorHandler, document) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/** @docs-private */\nconst ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        ErrorHandler,\n        [new Optional(), DOCUMENT],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/** Clones an SVGElement while preserving type information. */\nfunction cloneSvg(svg) {\n    return svg.cloneNode(true);\n}\n/** Returns the cache key to use for an icon namespace and name. */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\nfunction isSafeUrlWithOptions(value) {\n    return !!(value.url && value.options);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatIcon.\n/** @docs-private */\nconst _MatIconBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY,\n});\n/** @docs-private */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    const _document = inject(DOCUMENT);\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: () => (_location ? _location.pathname + _location.search : ''),\n    };\n}\n/** SVG attributes that accept a FuncIRI (e.g. `url(<something>)`). */\nconst funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke',\n];\n/** Selector that can be used to find all elements that are using a `FuncIRI`. */\nconst funcIriAttributeSelector = funcIriAttributes.map(attr => `[${attr}]`).join(', ');\n/** Regex that can be used to extract the id out of a FuncIRI. */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nclass MatIcon extends _MatIconBase {\n    constructor(elementRef, _iconRegistry, ariaHidden, _location, _errorHandler) {\n        super(elementRef);\n        this._iconRegistry = _iconRegistry;\n        this._location = _location;\n        this._errorHandler = _errorHandler;\n        this._inline = false;\n        /** Subscription to the current in-progress SVG icon request. */\n        this._currentIconFetch = Subscription.EMPTY;\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n    }\n    /**\n     * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n     * the element the icon is contained in.\n     */\n    get inline() {\n        return this._inline;\n    }\n    set inline(inline) {\n        this._inline = coerceBooleanProperty(inline);\n    }\n    /** Name of the icon in the SVG icon set. */\n    get svgIcon() {\n        return this._svgIcon;\n    }\n    set svgIcon(value) {\n        if (value !== this._svgIcon) {\n            if (value) {\n                this._updateSvgIcon(value);\n            }\n            else if (this._svgIcon) {\n                this._clearSvgElement();\n            }\n            this._svgIcon = value;\n        }\n    }\n    /** Font set that the icon is a part of. */\n    get fontSet() {\n        return this._fontSet;\n    }\n    set fontSet(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontSet) {\n            this._fontSet = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    /** Name of an icon within a font set. */\n    get fontIcon() {\n        return this._fontIcon;\n    }\n    set fontIcon(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontIcon) {\n            this._fontIcon = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     */\n    _splitIconName(iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        const parts = iconName.split(':');\n        switch (parts.length) {\n            case 1:\n                return ['', parts[0]]; // Use default namespace.\n            case 2:\n                return parts;\n            default:\n                throw Error(`Invalid icon name: \"${iconName}\"`); // TODO: add an ngDevMode check\n        }\n    }\n    ngOnInit() {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        this._updateFontIconClasses();\n    }\n    ngAfterViewChecked() {\n        const cachedElements = this._elementsWithExternalReferences;\n        if (cachedElements && cachedElements.size) {\n            const newPath = this._location.getPathname();\n            // We need to check whether the URL has changed on each change detection since\n            // the browser doesn't have an API that will let us react on link clicks and\n            // we can't depend on the Angular router. The references need to be updated,\n            // because while most browsers don't care whether the URL is correct after\n            // the first render, Safari will break if the user navigates to a different\n            // page and the SVG isn't re-rendered.\n            if (newPath !== this._previousPath) {\n                this._previousPath = newPath;\n                this._prependPathToReferences(newPath);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._currentIconFetch.unsubscribe();\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n    }\n    _usingFontIcon() {\n        return !this.svgIcon;\n    }\n    _setSvgElement(svg) {\n        this._clearSvgElement();\n        // Note: we do this fix here, rather than the icon registry, because the\n        // references have to point to the URL at the time that the icon was created.\n        const path = this._location.getPathname();\n        this._previousPath = path;\n        this._cacheChildrenWithExternalReferences(svg);\n        this._prependPathToReferences(path);\n        this._elementRef.nativeElement.appendChild(svg);\n    }\n    _clearSvgElement() {\n        const layoutElement = this._elementRef.nativeElement;\n        let childCount = layoutElement.childNodes.length;\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            const child = layoutElement.childNodes[childCount];\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                child.remove();\n            }\n        }\n    }\n    _updateFontIconClasses() {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        const elem = this._elementRef.nativeElement;\n        const fontSetClass = this.fontSet\n            ? this._iconRegistry.classNameForFontAlias(this.fontSet)\n            : this._iconRegistry.getDefaultFontSetClass();\n        if (fontSetClass != this._previousFontSetClass) {\n            if (this._previousFontSetClass) {\n                elem.classList.remove(this._previousFontSetClass);\n            }\n            if (fontSetClass) {\n                elem.classList.add(fontSetClass);\n            }\n            this._previousFontSetClass = fontSetClass;\n        }\n        if (this.fontIcon != this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    }\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     */\n    _cleanupFontValue(value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    }\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     */\n    _prependPathToReferences(path) {\n        const elements = this._elementsWithExternalReferences;\n        if (elements) {\n            elements.forEach((attrs, element) => {\n                attrs.forEach(attr => {\n                    element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n                });\n            });\n        }\n    }\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     */\n    _cacheChildrenWithExternalReferences(element) {\n        const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n        const elements = (this._elementsWithExternalReferences =\n            this._elementsWithExternalReferences || new Map());\n        for (let i = 0; i < elementsWithFuncIri.length; i++) {\n            funcIriAttributes.forEach(attr => {\n                const elementWithReference = elementsWithFuncIri[i];\n                const value = elementWithReference.getAttribute(attr);\n                const match = value ? value.match(funcIriPattern) : null;\n                if (match) {\n                    let attributes = elements.get(elementWithReference);\n                    if (!attributes) {\n                        attributes = [];\n                        elements.set(elementWithReference, attributes);\n                    }\n                    attributes.push({ name: attr, value: match[1] });\n                }\n            });\n        }\n    }\n    /** Sets a new SVG icon with a particular name. */\n    _updateSvgIcon(rawName) {\n        this._svgNamespace = null;\n        this._svgName = null;\n        this._currentIconFetch.unsubscribe();\n        if (rawName) {\n            const [namespace, iconName] = this._splitIconName(rawName);\n            if (namespace) {\n                this._svgNamespace = namespace;\n            }\n            if (iconName) {\n                this._svgName = iconName;\n            }\n            this._currentIconFetch = this._iconRegistry\n                .getNamedSvgIcon(iconName, namespace)\n                .pipe(take(1))\n                .subscribe(svg => this._setSvgElement(svg), (err) => {\n                const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n            });\n        }\n    }\n}\nMatIcon.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatIcon, deps: [{ token: i0.ElementRef }, { token: MatIconRegistry }, { token: 'aria-hidden', attribute: true }, { token: MAT_ICON_LOCATION }, { token: i0.ErrorHandler }], target: i0.ɵɵFactoryTarget.Component });\nMatIcon.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatIcon, selector: \"mat-icon\", inputs: { color: \"color\", inline: \"inline\", svgIcon: \"svgIcon\", fontSet: \"fontSet\", fontIcon: \"fontIcon\" }, host: { attributes: { \"role\": \"img\" }, properties: { \"attr.data-mat-icon-type\": \"_usingFontIcon() ? \\\"font\\\" : \\\"svg\\\"\", \"attr.data-mat-icon-name\": \"_svgName || fontIcon\", \"attr.data-mat-icon-namespace\": \"_svgNamespace || fontSet\", \"class.mat-icon-inline\": \"inline\", \"class.mat-icon-no-color\": \"color !== \\\"primary\\\" && color !== \\\"accent\\\" && color !== \\\"warn\\\"\" }, classAttribute: \"mat-icon notranslate\" }, exportAs: [\"matIcon\"], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatIcon, decorators: [{\n            type: Component,\n            args: [{ template: '<ng-content></ng-content>', selector: 'mat-icon', exportAs: 'matIcon', inputs: ['color'], host: {\n                        'role': 'img',\n                        'class': 'mat-icon notranslate',\n                        '[attr.data-mat-icon-type]': '_usingFontIcon() ? \"font\" : \"svg\"',\n                        '[attr.data-mat-icon-name]': '_svgName || fontIcon',\n                        '[attr.data-mat-icon-namespace]': '_svgNamespace || fontSet',\n                        '[class.mat-icon-inline]': 'inline',\n                        '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: MatIconRegistry }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['aria-hidden']\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_ICON_LOCATION]\n                }] }, { type: i0.ErrorHandler }]; }, propDecorators: { inline: [{\n                type: Input\n            }], svgIcon: [{\n                type: Input\n            }], fontSet: [{\n                type: Input\n            }], fontIcon: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatIconModule {\n}\nMatIconModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatIconModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatIconModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatIconModule, declarations: [MatIcon], imports: [MatCommonModule], exports: [MatIcon, MatCommonModule] });\nMatIconModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatIconModule, imports: [[MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatIconModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatIcon, MatCommonModule],\n                    declarations: [MatIcon],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry, getMatIconFailedToSanitizeLiteralError, getMatIconFailedToSanitizeUrlError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError };\n"],"names":["DOCUMENT","i0","Injectable","Inject","QueryList","Directive","Input","InjectionToken","Optional","EventEmitter","Output","NgModule","i1","_getFocusedElementPierceShadowDom","normalizePassiveListenerOptions","_getEventTarget","_getShadowRoot","Subject","Subscription","BehaviorSubject","of","hasModifierKey","A","Z","ZERO","NINE","END","HOME","LEFT_ARROW","RIGHT_ARROW","UP_ARROW","DOWN_ARROW","TAB","ALT","CONTROL","MAC_META","META","SHIFT","tap","debounceTime","filter","map","take","skip","distinctUntilChanged","takeUntil","coerceBooleanProperty","coerceElement","i1$1","ObserversModule","ID_DELIMITER","addAriaReferencedId","el","attr","id","ids","getAriaReferenceIds","some","existingId","trim","push","setAttribute","join","removeAriaReferencedId","filteredIds","val","length","removeAttribute","getAttribute","match","MESSAGES_CONTAINER_ID","CDK_DESCRIBEDBY_ID_PREFIX","CDK_DESCRIBEDBY_HOST_ATTRIBUTE","nextId","AriaDescriber","constructor","_document","_platform","_messageRegistry","Map","_messagesContainer","_id","describe","hostElement","message","role","_canBeDescribed","key","getKey","setMessageId","set","messageElement","referenceCount","has","_createMessageElement","_isElementDescribedByMessage","_addMessageReference","removeDescription","_isElementNode","_removeMessageReference","registeredMessage","get","_deleteMessageElement","childNodes","remove","ngOnDestroy","describedElements","querySelectorAll","i","_removeCdkDescribedByReferenceIds","clear","createElement","textContent","_createMessagesContainer","appendChild","delete","containerClassName","serverContainers","messagesContainer","style","visibility","classList","add","isBrowser","body","element","originalReferenceIds","indexOf","referenceIds","messageId","trimmedMessage","ariaLabel","nodeType","ELEMENT_NODE","ɵfac","Platform","ɵprov","type","args","providedIn","undefined","decorators","ListKeyManager","_items","_activeItemIndex","_activeItem","_wrap","_letterKeyStream","_typeaheadSubscription","EMPTY","_vertical","_allowedModifierKeys","_homeAndEnd","_skipPredicateFn","item","disabled","_pressedLetters","tabOut","change","changes","subscribe","newItems","itemArray","toArray","newIndex","skipPredicate","predicate","withWrap","shouldWrap","withVerticalOrientation","enabled","withHorizontalOrientation","direction","_horizontal","withAllowedModifierKeys","keys","withTypeAhead","debounceInterval","ngDevMode","getLabel","Error","unsubscribe","pipe","letter","inputString","items","_getItemsArray","index","toUpperCase","setActiveItem","withHomeAndEnd","previousActiveItem","updateActiveItem","next","onKeydown","event","keyCode","modifiers","isModifierAllowed","every","modifier","setNextItemActive","setPreviousItemActive","setFirstItemActive","setLastItemActive","toLocaleUpperCase","String","fromCharCode","preventDefault","activeItemIndex","activeItem","isTyping","_setActiveItemByIndex","_setActiveItemByDelta","delta","_setActiveInWrapMode","_setActiveInDefaultMode","fallbackDelta","ActiveDescendantKeyManager","setInactiveStyles","setActiveStyles","FocusKeyManager","arguments","_origin","setFocusOrigin","origin","focus","IsFocusableConfig","ignoreVisibility","InteractivityChecker","isDisabled","hasAttribute","isVisible","hasGeometry","getComputedStyle","isTabbable","frameElement","getFrameElement","getWindow","getTabIndexValue","nodeName","toLowerCase","tabIndexValue","WEBKIT","IOS","isPotentiallyTabbableIOS","FIREFOX","tabIndex","isFocusable","config","isPotentiallyFocusable","window","offsetWidth","offsetHeight","getClientRects","isNativeFormElement","isHiddenInput","isInputElement","isAnchorWithHref","isAnchorElement","hasValidTabIndex","isNaN","parseInt","inputType","node","ownerDocument","defaultView","FocusTrap","_element","_checker","_ngZone","deferAnchors","_hasAttached","startAnchorListener","focusLastTabbableElement","endAnchorListener","focusFirstTabbableElement","_enabled","attachAnchors","value","_startAnchor","_endAnchor","_toggleAnchorTabIndex","destroy","startAnchor","endAnchor","removeEventListener","runOutsideAngular","_createAnchor","addEventListener","parentNode","insertBefore","nextSibling","focusInitialElementWhenReady","options","Promise","resolve","_executeOnStable","focusInitialElement","focusFirstTabbableElementWhenReady","focusLastTabbableElementWhenReady","_getRegionBoundary","bound","markers","console","warn","_getFirstTabbableElement","_getLastTabbableElement","redirectToElement","querySelector","focusableChild","hasAttached","root","children","tabbableChild","anchor","isEnabled","toggleAnchors","fn","isStable","onStable","FocusTrapFactory","create","deferCaptureElements","NgZone","CdkTrapFocus","_elementRef","_focusTrapFactory","_previouslyFocusedElement","focusTrap","nativeElement","autoCapture","_autoCapture","ngAfterContentInit","_captureFocus","ngDoCheck","ngOnChanges","autoCaptureChange","firstChange","ElementRef","ɵdir","selector","exportAs","ConfigurableFocusTrap","_focusTrapManager","_inertStrategy","defer","register","deregister","_enable","preventFocus","_disable","allowFocus","FOCUS_TRAP_INERT_STRATEGY","EventListenerFocusTrapInertStrategy","_listener","e","_trapFocus","target","focusTrapRoot","contains","closest","setTimeout","activeElement","FocusTrapManager","_focusTrapStack","ft","stack","splice","ConfigurableFocusTrapFactory","configObject","isFakeMousedownFromScreenReader","buttons","offsetX","offsetY","isFakeTouchstartFromScreenReader","touch","touches","changedTouches","identifier","radiusX","radiusY","INPUT_MODALITY_DETECTOR_OPTIONS","INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS","ignoreKeys","TOUCH_BUFFER_MS","modalityEventListenerOptions","passive","capture","InputModalityDetector","ngZone","document","_mostRecentTarget","_modality","_lastTouchMs","_onKeydown","_options","_onMousedown","Date","now","_onTouchstart","modalityDetected","modalityChanged","mostRecentModality","complete","Document","LIVE_ANNOUNCER_ELEMENT_TOKEN","factory","LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY","LIVE_ANNOUNCER_DEFAULT_OPTIONS","LiveAnnouncer","elementToken","_defaultOptions","_liveElement","_createLiveElement","announce","defaultOptions","politeness","duration","clearTimeout","_previousTimeout","_currentPromise","_currentResolve","elementClass","previousElements","getElementsByClassName","liveEl","CdkAriaLive","_liveAnnouncer","_contentObserver","_politeness","_subscription","observe","elementText","_previousAnnouncedText","ContentObserver","FOCUS_MONITOR_DEFAULT_OPTIONS","captureEventListenerOptions","FocusMonitor","_inputModalityDetector","_windowFocused","_originFromTouchInteraction","_elementInfo","_monitoredElementCount","_rootNodeFocusListenerCount","_windowFocusListener","_windowFocusTimeoutId","_stopInputModalityDetector","_rootNodeFocusAndBlurListener","handler","_onFocus","_onBlur","parentElement","call","_detectionMode","detectionMode","monitor","checkChildren","rootNode","_getDocument","cachedInfo","subject","info","_registerGlobalListeners","stopMonitoring","elementInfo","_setClasses","_removeGlobalListeners","focusVia","focusedElement","_getClosestElementsInfo","forEach","currentElement","_originChanged","_setOrigin","_info","_getWindow","doc","_getFocusOrigin","focusEventTarget","_shouldBeAttributedToTouch","_lastFocusOrigin","toggle","isFromInteraction","_originTimeoutId","ms","relatedTarget","Node","_emitOrigin","run","rootNodeFocusListeners","modality","results","CdkMonitorFocus","_focusMonitor","cdkFocusChange","ngAfterViewInit","_monitorSubscription","emit","BLACK_ON_WHITE_CSS_CLASS","WHITE_ON_BLACK_CSS_CLASS","HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS","HighContrastModeDetector","getHighContrastMode","testElement","backgroundColor","position","documentWindow","computedStyle","computedColor","replace","_applyBodyHighContrastModeCssClasses","_hasCheckedHighContrastMode","bodyClasses","mode","A11yModule","highContrastModeDetector","ɵmod","ɵinj","imports","declarations","exports","inject","DIR_DOCUMENT","DIR_DOCUMENT_FACTORY","RTL_LOCALE_PATTERN","_resolveDirectionality","rawValue","navigator","language","test","Directionality","bodyDir","dir","htmlDir","documentElement","Dir","_dir","_isInitialized","previousValue","_rawDir","provide","useExisting","providers","host","BidiModule","coerceNumberProperty","Observable","MutationObserverFactory","callback","MutationObserver","_mutationObserverFactory","_observedElements","_","_cleanupObserver","elementOrRef","observer","stream","_observeElement","subscription","_unobserveElement","mutations","characterData","childList","subtree","count","disconnect","CdkObserveContent","_disabled","_currentSubscription","_unsubscribe","_subscribe","debounce","_debounce","PLATFORM_ID","isPlatformBrowser","hasV8BreakIterator","Intl","v8BreakIterator","_platformId","EDGE","userAgent","TRIDENT","BLINK","chrome","CSS","ANDROID","SAFARI","Object","PlatformModule","supportedInputTypes","candidateInputTypes","getSupportedInputTypes","Set","featureTestInput","supportsPassiveEvents","supportsPassiveEventListeners","defineProperty","rtlScrollAxisType","scrollBehaviorSupported","supportsScrollBehavior","Element","scrollToFunction","prototype","scrollTo","toString","getRtlScrollAxisType","scrollContainer","containerStyle","width","overflow","pointerEvents","content","contentStyle","height","scrollLeft","shadowDomIsSupported","_supportsShadowDom","head","createShadowRoot","attachShadow","getRootNode","ShadowRoot","shadowRoot","newActiveElement","composedPath","_isTestEnvironment","__karma__","jasmine","jest","Mocha","Version","LOCALE_ID","Component","ViewEncapsulation","ChangeDetectionStrategy","VERSION","VERSION$1","i3","CommonModule","startWith","ANIMATION_MODULE_TYPE","ENTER","SPACE","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","MATERIAL_SANITY_CHECKS_FACTORY","MATERIAL_SANITY_CHECKS","MatCommonModule","_sanityChecks","_hasDoneGlobalChecks","_checkIsEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_checkCdkVersionMatch","name","doctype","display","full","mixinDisabled","base","mixinColor","defaultColor","color","_color","colorPalette","mixinDisableRipple","_disableRipple","disableRipple","mixinTabIndex","defaultTabIndex","_tabIndex","mixinErrorState","stateChanges","errorState","updateErrorState","oldState","parent","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","control","ngControl","newState","isErrorState","mixinInitialized","_pendingSubscribers","initialized","subscriber","_notifySubscriber","_markInitialized","MAT_DATE_LOCALE","MAT_DATE_LOCALE_FACTORY","DateAdapter","_localeChanges","localeChanges","getValidDateOrNull","obj","isDateInstance","isValid","deserialize","invalid","setLocale","locale","compareDate","first","second","getYear","getMonth","getDate","sameDate","firstValid","secondValid","clampDate","date","min","max","MAT_DATE_FORMATS","ISO_8601_REGEX","range","valueFunction","valuesArray","Array","NativeDateAdapter","matDateLocale","useUtcForDisplay","getFullYear","getDayOfWeek","getDay","getMonthNames","dtf","DateTimeFormat","month","timeZone","_format","getDateNames","day","getDayOfWeekNames","weekday","getYearName","year","getFirstDayOfWeek","getNumDaysInMonth","_createDateWithOverflow","clone","getTime","createDate","result","today","parse","format","displayFormat","addCalendarYears","years","addCalendarMonths","months","newDate","addCalendarDays","days","toIso8601","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","NaN","d","setFullYear","setHours","n","slice","setUTCFullYear","setUTCHours","getHours","getMinutes","getSeconds","getMilliseconds","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","useClass","MatNativeDateModule","useValue","ShowOnDirtyErrorStateMatcher","form","dirty","submitted","ErrorStateMatcher","touched","MatLine","setLines","lines","prefix","setClass","className","isAdd","MatLineModule","RippleRef","_renderer","state","fadeOut","fadeOutRipple","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","passiveEventOptions","pointerDownEvents","pointerUpEvents","RippleRenderer","_target","elementOrElementRef","platform","_isPointerDown","_activeRipples","_pointerUpEventsRegistered","_containerElement","fadeInRipple","x","y","containerRect","_containerRect","getBoundingClientRect","animationConfig","animation","centered","left","top","radius","distanceToFurthestCorner","ripple","transitionDuration","enforceStyleRecalculation","transform","rippleRef","persistent","_mostRecentTransientRipple","_runTimeoutOutsideZone","isMostRecentTransientRipple","wasActive","size","rippleEl","opacity","fadeOutAll","fadeOutAllNonPersistent","setupTriggerEvents","_triggerElement","_removeTriggerEvents","_registerEvents","handleEvent","_onTouchStart","_onPointerUp","isFakeMousedown","isSyntheticEvent","_lastTouchStartEvent","rippleDisabled","clientX","clientY","rippleConfig","terminateOnPointerUp","delay","eventTypes","getPropertyValue","rect","distX","Math","abs","right","distY","bottom","sqrt","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","globalOptions","_animationMode","_globalOptions","_rippleRenderer","_setupTriggerEventsIfEnabled","trigger","_trigger","ngOnInit","launch","configOrX","unbounded","MatRippleModule","MatPseudoCheckbox","ɵcmp","encapsulation","None","changeDetection","OnPush","template","styles","MatPseudoCheckboxModule","MAT_OPTION_PARENT_COMPONENT","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","_MatOptgroupBase","_labelId","_inert","inertGroups","label","MAT_OPTGROUP","MatOptgroup","inputs","_uniqueIdCounter","MatOptionSelectionChange","source","isUserInput","_MatOptionBase","_changeDetectorRef","_parent","group","_selected","_active","_mostRecentViewValue","onSelectionChange","_stateChanges","multiple","selected","active","viewValue","_getHostElement","select","markForCheck","_emitSelectionChangeEvent","deselect","_handleKeydown","_selectViaInteraction","_getAriaSelected","_getTabIndex","ngAfterViewChecked","ChangeDetectorRef","MatOption","changeDetectorRef","NgIf","_countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","groups","groupCounter","_getOptionScrollPosition","optionOffset","optionHeight","currentScrollPosition","panelHeight","MatOptionModule","SecurityContext","SkipSelf","ErrorHandler","Attribute","throwError","forkJoin","catchError","finalize","share","HttpClient","i2","DomSanitizer","policy","getPolicy","ttWindow","trustedTypes","createPolicy","createHTML","s","trustedHTMLFromString","html","getMatIconNameNotFoundError","iconName","getMatIconNoHttpProviderError","getMatIconFailedToSanitizeUrlError","url","getMatIconFailedToSanitizeLiteralError","literal","SvgIconConfig","svgText","MatIconRegistry","_httpClient","_sanitizer","_errorHandler","_svgIconConfigs","_iconSetConfigs","_cachedIconsByUrl","_inProgressUrlFetches","_fontCssClassesByAlias","_resolvers","_defaultFontSetClass","addSvgIcon","addSvgIconInNamespace","addSvgIconLiteral","addSvgIconLiteralInNamespace","namespace","_addSvgIconConfig","addSvgIconResolver","resolver","cleanLiteral","sanitize","HTML","trustedLiteral","addSvgIconSet","addSvgIconSetInNamespace","addSvgIconSetLiteral","addSvgIconSetLiteralInNamespace","_addSvgIconSetConfig","registerFontClassAlias","alias","classNameForFontAlias","setDefaultFontSetClass","getDefaultFontSetClass","getSvgIconFromUrl","safeUrl","RESOURCE_URL","cachedIcon","cloneSvg","_loadSvgIconFromConfig","svg","getNamedSvgIcon","iconKey","_getSvgFromConfig","_getIconConfigFromResolvers","iconSetConfigs","_getSvgFromIconSetConfigs","_svgElementFromConfig","namedIcon","_extractIconWithNameFromAnySet","iconSetFetchRequests","iconSetConfig","_loadSvgIconSetFromConfig","err","errorMessage","handleError","foundIcon","_extractSvgIconFromSet","_fetchIcon","iconSet","iconSource","iconElement","cloneNode","_setSvgAttributes","_toSvgElement","_svgElementFromString","str","div","innerHTML","attributes","viewBox","iconConfig","withCredentials","inProgressFetch","req","responseType","configNamespace","svgElement","isSafeUrlWithOptions","ICON_REGISTRY_PROVIDER_FACTORY","parentRegistry","httpClient","sanitizer","errorHandler","ICON_REGISTRY_PROVIDER","deps","useFactory","_MatIconBase","MAT_ICON_LOCATION","MAT_ICON_LOCATION_FACTORY","_location","location","getPathname","pathname","search","funcIriAttributes","funcIriAttributeSelector","funcIriPattern","MatIcon","elementRef","_iconRegistry","ariaHidden","_inline","_currentIconFetch","inline","svgIcon","_svgIcon","_updateSvgIcon","_clearSvgElement","fontSet","_fontSet","newValue","_cleanupFontValue","_updateFontIconClasses","fontIcon","_fontIcon","_splitIconName","parts","split","cachedElements","_elementsWithExternalReferences","newPath","_previousPath","_prependPathToReferences","_usingFontIcon","_setSvgElement","path","_cacheChildrenWithExternalReferences","layoutElement","childCount","child","elem","fontSetClass","_previousFontSetClass","_previousFontIconClass","elements","attrs","elementsWithFuncIri","elementWithReference","rawName","_svgNamespace","_svgName","MatIconModule"],"sourceRoot":"webpack:///"}